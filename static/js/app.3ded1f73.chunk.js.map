{"version":3,"sources":["constants/styles.ts","services/auth/authApi.ts","constants/api.ts","store/slices/auth.ts","services/auth/localAuth.ts","constants/floorPlanData.ts","store/slices/home.ts","constants/ac_settings.ts","store/slices/ac.ts","store/index.ts","components/UI/Button.tsx","components/auth/Input.tsx","components/auth/AuthForm.tsx","components/auth/AuthContent.tsx","screens/auth/LoginScreen.tsx","components/user/ProfileButton.tsx","components/Home/FloorPlan/Line.tsx","components/Home/FloorPlan/MapHelpers.ts","components/Home/FloorPlan/Building.tsx","components/Home/FloorPlan/RoomContainer.tsx","components/Home/FloorPlan/Rooms.tsx","components/Home/FloorPlan/FloorPlan.tsx","screens/HomeScreen.tsx","screens/ProfileScreen.tsx","components/AcController/Buttons/CorrectionModeButton.tsx","components/AcController/Buttons/RemoteBaseButton.tsx","components/AcController/Buttons/FanSpeedButtton.tsx","components/AcController/Buttons/ModeButton.tsx","components/AcController/Buttons/PowerButton.tsx","components/AcController/Buttons/Arrow.tsx","components/AcController/Buttons/TemperatureDownButton.tsx","components/AcController/Buttons/TemperatureUpButton.tsx","components/AcController/Buttons/index.tsx","components/AcController/Display/Temperature.tsx","components/AcController/Display/Fan.tsx","components/AcController/Display/Mode.tsx","components/AcController/Display/index.tsx","components/AcController/Remote.tsx","screens/AcRemoteScreen.tsx","navigation/Navigation.tsx","App.tsx","assets/icons/air-conditioner-colored.png","assets/icons/off.png","assets/icons/on.png","assets/icons/cold.png","assets/icons/hot.png"],"names":["Colors","loginWithPassword","credentials","a","async","sendAuthRequest","signupWithPassword","isAuthenticated","authData","token","createdAt","expiresIn","Date","now","responseDataToAuthData","data","username","access_token","tokenType","token_type","refreshToken","refresh_token","expires_in","created_at","isLogin","URL","fetch","method","headers","body","JSON","stringify","client_id","grant_type","response","ok","json","errorResponseData","console","log","Error","user","login","createAsyncThunk","signup","logout","thunkApi","initialState","isLoading","authSlice","createSlice","name","reducers","setState","state","action","key","Object","keys","extraReducers","builder","addCase","pending","fulfilled","payload","entries","value","SecureStore","toString","storeAuthDataToSecureAsync","rejected","Alert","alert","error","message","text","style","actions","buildingData","points","roomsData","properties","id","isLightOn","empty","geometry","type","coordinates","homeSlice","rooms","toggleLight","index","findIndex","room","roomId","acModes","acFanSpeeds","acAvailableTemperature","mode","t_min","t_max","min","max","createAcAsyncThunk","correction","raiseTemperature","lowerTemperature","turnOn","turnOff","changeFanSpeed","changeMode","acSlice","correctionMode","settings","power","temperature","cool","dry","heat","auto","fan","fanSpeed","toggleCorrectionMode","tempLimit","temp","length","store","configureStore","reducer","auth","authReducer","home","homeReducer","ac","acReducer","Button","onPress","children","disabled","margin","buttonStyles","styles","button","Pressable","pressed","View","ActivityIndicator","size","color","Text","buttonText","StyleSheet","create","borderRadius","paddingVertical","paddingHorizontal","backgroundColor","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","opacity","textAlign","fontSize","fontWeight","Input","props","label","keyboardType","secure","onUpdateValue","isInvalid","inputContainer","labelInvalid","TextInput","input","inputInvalid","autoCapitalize","secureTextEntry","onChangeText","marginVertical","borderBottomColor","borderBottomWidth","marginBottom","AuthForm","onSubmit","credentialsInvalid","useState","password","setCredentials","useSelector","usernameIsInvalid","passwordIsInvalid","updateInputValueHandler","inputType","enteredValue","form","buttons","marginTop","AuthContent","onAuthenticate","useNavigation","navigate","setCredentialsInvalid","authContent","trim","usernameIsValid","passwordIsValid","marginHorizontal","padding","LoginScreen","dispatch","useDispatch","err","ProfileButton","AntDesign","borderColor","borderWidth","stylesGenerator","component","position","top","lineWidth","start","Line","isHorizontal","maxXY","maxX","maxY","forEach","polygon","point","roomsCoordinates","scale","map","room_coordinates","traslateRoomCoordinatesToScale","builduingCoordinates","walls","wall","traslateBuildingCoordinatesScale","Building","createPolygonSize","Math","abs","justifyContent","alignItems","RoomContainer","find","undefined","Rooms","roomData","flex","imageContainer","end","image","FloorPlan","Image","source","require","rootContainer","title","HomeScreen","navigation","useLayoutEffect","setOptions","headerRight","screen","ProfileScreen","CorrectionModeButton","isCorrectionMode","Ionicons","componentStyle","isEmpty","outlineStyle","RemoteBaseButton","dispatchAction","onLongPress","FanSpeedButton","isOn","FontAwesome5","mainContainer","flexDirection","topContainer","bottomContainer","icon","ModeButton","MaterialIcons","PowerButton","arrow","borderStartWidth","borderStartColor","borderEndWidth","borderEndColor","up","transform","rotate","down","Arrow","direction","paddingLeft","marginLeft","TemperatureDownButton","TemperatureUpButton","powerButtonContainer","buttonsColumn","emptySpace","AcButtons","generalText","temperatureText","units","Temperature","dynamicStyle","setDynamicStyle","useEffect","Fan","speed","MaterialCommunityIcons","Mode","bottomBar","offText","infoText","textAlignVertical","AcDisplay","display","Remote","AcRemoteScreen","Stack","createNativeStackNavigator","Drawer","createDrawerNavigator","AuthStack","Navigator","screenOptions","headerStyle","headerTintColor","headerShadowVisible","contentStyle","Screen","CustomDrawerContent","DrawerContentScrollView","DrawerContent","DrawerItem","inactiveTintColor","AuthenticatedDrawer","drawerContentStyle","sceneContainerStyle","headerLeft","DrawerToggleButton","tintColor","drawerContent","Navigation","isLoggedIn","parseInt","checkLoginData","NavigationContainer","App","container","StatusBar","module","exports"],"mappings":"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","file":"static/js/app.3ded1f73.chunk.js","sourcesContent":["export const Colors = {\n  primary: \"#011936\",\n  primary100: \"rgba(19,21,21, 0.5)\",\n  secondary: \"#F4FFFD\",\n  warning: \"#F9DC5C\",\n  danger: \"#ED254E\",\n  neutral: \"#011936\",\n  error100: \"#F7A1B2\",\n  error500: \"#EB1E47\",\n  light: \"#ffffbf\",\n  transparent: \"rgba(0, 0, 0, 0)\",\n  disabled: \"#EBEBE4\",\n\n  // dark: {\n  //   primary: \"#011936\",\n  //   primary100: \"rgba(19,21,21, 0.5)\",\n  //   secondary: \"#F4FFFD\",\n  //   warning: \"#F9DC5C\",\n  //   danger: \"#ED254E\",\n  //   neutral: \"#011936\",\n  //   error100: \"#F7A1B2\",\n  //   error500: \"#EB1E47\",\n  //   light: \"#ffffbf\",\n  //   transparent: \"rgba(0, 0, 0, 0)\",\n  //   disabled: \"#EBEBE4\",\n  // },\n  // light: {\n  //   primary: \"#131515\",\n  //   primary100: \"rgba(19,21,21, 0.5)\",\n  //   secondary: \"#2B2C28\",\n  //   warning: \"#FF8811\",\n  //   danger: \"#DA2C38\",\n  //   neutral: \"#FFFAFB\",\n  //   error100: \"#fcdcbf\",\n  //   error500: \"#f37c13\",\n  //   light: \"#ffffbf\",\n  //   transparent: \"rgba(0, 0, 0, 0)\",\n  //   disabled: \"#EBEBE4\",\n  // },\n};\n\n// export const Colors = {\n//   primary: \"#131515\",\n//   primary100: \"rgba(19,21,21, 0.5)\",\n//   secondary: \"#2B2C28\",\n//   warning: \"#FF8811\",\n//   danger: \"#DA2C38\",\n//   neutral: \"#FFFAFB\",\n//   error100: \"#fcdcbf\",\n//   error500: \"#f37c13\",\n//   light: \"#ffffbf\",\n//   transparent: \"rgba(0, 0, 0, 0)\",\n//   disabled: \"#EBEBE4\",\n// };\n\n// export const Colors = {\n//   primary: \"#CD5D67\",\n//   primary100: \"rgba(19,21,21, 0.5)\",\n//   secondary: \"#FFEEF2\",\n//   warning: \"#FF8811\",\n//   danger: \"#DA2C38\",\n//   neutral: \"#84A59D\",\n//   error100: \"#fcdcbf\",\n//   error500: \"#f37c13\",\n//   light: \"#ffffbf\",\n//   transparent: \"rgba(0, 0, 0, 0)\",\n//   disabled: \"#EBEBE4\",\n// };\n","import { BASE_URL, CLIENT_ID } from \"../../constants/api\";\n\nexport type AuthStateData = {\n  username: string;\n  token: string;\n  tokenType: string;\n  refreshToken: string;\n  createdAt: number;\n  expiresIn: number;\n  isLoading: boolean;\n};\n\nexport type AuthResponseData = {\n  username: string;\n  access_token: string;\n  token_type: string;\n  refresh_token: string;\n  created_at: number;\n  expires_in: number;\n};\nexport type PasswordCredentials = { username: string; password: string };\n\nexport const loginWithPassword = async (credentials: PasswordCredentials) => {\n  return sendAuthRequest(credentials, true);\n};\n\nexport const signupWithPassword = async (credentials: PasswordCredentials) => {\n  return sendAuthRequest(credentials, false);\n};\n\nexport const isAuthenticated = (authData: AuthStateData) => {\n  return authData.token && authData.createdAt + authData.expiresIn > Date.now();\n};\n\nconst responseDataToAuthData = (data: AuthResponseData) =>\n  ({\n    username: data.username,\n    token: data.access_token,\n    tokenType: data.token_type,\n    refreshToken: data.refresh_token,\n    expiresIn: data.expires_in * 1000,\n    createdAt: (data.created_at + 2 * 60 * 60) * 1000,\n  } as AuthStateData);\n\nconst sendAuthRequest = async (\n  credentials: PasswordCredentials,\n  isLogin: boolean\n) => {\n  const URL = BASE_URL + (isLogin ? \"oauth/token\" : \"users\");\n  const response = await fetch(URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      ...credentials,\n      client_id: CLIENT_ID,\n      grant_type: \"password\",\n    }),\n  });\n\n  if (!response.ok) {\n    const errorResponseData = await response.json();\n    console.log(errorResponseData);\n    throw new Error(\"Something went wrong, response not ok\");\n  }\n\n  const data = await response.json();\n\n  const authData = responseDataToAuthData({\n    ...(isLogin ? data : data.user),\n    username: credentials.username,\n  });\n  return authData;\n};\n","export const CLIENT_ID = \"aYfbZ6xVhnkqok-mf4x249R0csoA0S9TcfDwRJ2zVwU\"\n// export const CLIENT_SECRET = \"lELI34W4R8BFwuYj65Gpwl5igu8okcXCKxJd5YysKLM\"\nexport const BASE_URL = \"http://localhost:3000/\"\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Alert } from \"react-native\";\nimport {\n  AuthStateData,\n  loginWithPassword,\n  signupWithPassword,\n  PasswordCredentials,\n} from \"../../services/auth/authApi\";\nimport { storeAuthDataToSecureAsync } from \"../../services/auth/localAuth\";\n\nexport const login = createAsyncThunk(\n  \"auth/login\",\n  async (credentials: PasswordCredentials) => {\n    try {\n      return await loginWithPassword(credentials);\n    } catch (err: any) {\n      throw new Error(err);\n    }\n  }\n);\n\nexport const signup = createAsyncThunk(\n  \"auth/signup\",\n  async (credentials: PasswordCredentials) => {\n    try {\n      const response = await signupWithPassword(credentials);\n      return response\n      // return await signupWithPassword(credentials);\n    } catch (err: any) {\n      throw new Error(err);\n    }\n  }\n);\n\nexport const logout = createAsyncThunk(\"auth/logout\", async (thunkApi) => {\n  console.log(\"Nada logout\");\n});\n\nconst initialState: AuthStateData = {\n  username: \"\",\n  token: \"\",\n  tokenType: \"\",\n  refreshToken: \"\",\n  createdAt: 0,\n  expiresIn: 0,\n  isLoading: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setState(state, action: PayloadAction<AuthStateData>) {\n      for(const key in Object.keys(state)) {\n        // state[key] = action.payload[key]\n      }\n    }\n  },\n  extraReducers: (builder) => {\n    // Login\n    builder.addCase(login.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.createdAt = action.payload.createdAt;\n      state.expiresIn = action.payload.expiresIn;\n      state.token = action.payload.token;\n      state.refreshToken = action.payload.refreshToken;\n      state.tokenType = action.payload.tokenType;\n      storeAuthDataToSecureAsync(action.payload)\n      state.isLoading = false\n    });\n    builder.addCase(login.rejected, (state, action) => {\n      console.log(action);\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false\n    });\n\n    // Signup\n    builder.addCase(signup.fulfilled, (state, action) => {\n      state.createdAt = action.payload.createdAt;\n      state.expiresIn = action.payload.expiresIn;\n      state.token = action.payload.token;\n      state.refreshToken = action.payload.refreshToken;\n      state.tokenType = action.payload.tokenType;\n\n    });\n    builder.addCase(signup.rejected, (state, action) => {\n      console.log(action);\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n    });\n\n    //Logout\n    builder.addCase(logout.fulfilled, (state) => {\n      state.createdAt = initialState.createdAt;\n      state.expiresIn = initialState.expiresIn;\n      state.token = initialState.token;\n      state.refreshToken = initialState.refreshToken;\n      state.tokenType = initialState.tokenType;\n    });\n    builder.addCase(logout.rejected, (state, action) => {\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n    });\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setState } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import * as SecureStore from \"expo-secure-store\";\nimport { AuthStateData } from \"../../services/auth/authApi\";\n\nexport const getAuthDataFromSecureAsync = async () => {\n  return {\n    username: (await SecureStore.getItemAsync(\"username\")) || \"\",\n    token: (await SecureStore.getItemAsync(\"token\")) || \"\",\n    tokenType: (await SecureStore.getItemAsync(\"tokenType\")) || \"\",\n    refreshToken: (await SecureStore.getItemAsync(\"refreshToken\")) || \"\",\n    createdAt: parseInt((await SecureStore.getItemAsync(\"createdAt\")) || \"\"),\n    expiresIn: parseInt((await SecureStore.getItemAsync(\"expiresIn\")) || \"\"),\n    isLoading: !!((await SecureStore.getItemAsync(\"isLoading\")) || \"\"),\n  } as AuthStateData;\n};\n\nexport const storeAuthDataToSecureAsync = async (authData: AuthStateData) => {\n  try {\n    for (const [key, value] of Object.entries(authData)) {\n      const result = await SecureStore.setItemAsync(key, value.toString());\n    }\n  } catch (err: any) {\n    return false;\n  }\n  return true;\n};\n","import Room from \"../models/Room\";\nimport Wall from \"../models/Wall\";\n\nexport const buildingData = [\n  {\n    points: [\n      [0, 0],\n      [990, 0],\n    ],\n  },\n  {\n    points: [\n      [0, 0],\n      [0, 100],\n    ],\n  },\n  {\n    points: [\n      [0, 100],\n      [270, 100],\n    ],\n  },\n  {\n    points: [\n      [270, 100],\n      [270, 260],\n    ],\n  },\n  {\n    points: [\n      [270, 260],\n      [460, 260],\n    ],\n  },\n  {\n    points: [\n      [460, 470],\n      [460, 780],\n    ],\n  },\n  {\n    points: [\n      [460, 100],\n      [460, 400],\n    ],\n  },\n  {\n    points: [\n      [370, 260],\n      [370, 520],\n    ],\n  },\n  {\n    points: [\n      [370, 520],\n      [460, 520],\n    ],\n  },\n  {\n    points: [\n      [460, 360],\n      [490, 360],\n    ],\n  },\n  {\n    points: [\n      [550, 360],\n      [910, 360],\n    ],\n  },\n  {\n    points: [\n      [970, 360],\n      [990, 360],\n    ],\n  },\n  {\n    points: [\n      [990, 0],\n      [990, 780],\n    ],\n  },\n  {\n    points: [\n      [460, 520],\n      [490, 520],\n    ],\n  },\n  {\n    points: [\n      [550, 520],\n      [830, 520],\n    ],\n  },\n  {\n    points: [\n      [890, 360],\n      [890, 520],\n    ],\n  },\n  {\n    points: [\n      [870, 520],\n      [898, 520],\n    ],\n  },\n  {\n    points: [\n      [650, 520],\n      [650, 780],\n    ],\n  },\n  {\n    points: [\n      [460, 780],\n      [998, 780],\n    ],\n  },\n] as Wall[];\n\nexport const roomsData = [\n  {\n    properties: {\n      id: \"Hall 1\",\n      name: \"Hall 1\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [0, 0],\n          [0, 100],\n          [270, 0],\n          [270, 100],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Kitchen\",\n      name: \"Kitchen\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [270, 0],\n          [270, 260],\n          [460, 0],\n          [460, 260],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Living\",\n      name: \"Living\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [460, 0],\n          [460, 360],\n          [990, 0],\n          [990, 360],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Empty 1\",\n      name: \"Empty 1\",\n      isLightOn: false,\n      empty: true,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [370, 260],\n          [370, 330],\n          [460, 260],\n          [460, 330],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Bath 1\",\n      name: \"Bath 1\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [370, 330],\n          [370, 520],\n          [460, 330],\n          [460, 520],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Hall 2\",\n      name: \"Hall 2\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [460, 360],\n          [460, 520],\n          [560, 360],\n          [560, 520],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Empty 2\",\n      name: \"Empty 2\",\n      isLightOn: false,\n      empty: true,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [560, 360],\n          [560, 520],\n          [650, 360],\n          [650, 520],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Empty 3\",\n      name: \"Empty 3\",\n      isLightOn: false,\n      empty: true,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [650, 360],\n          [650, 380],\n          [890, 360],\n          [890, 380],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Bath 2\",\n      name: \"Bath 2\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [650, 380],\n          [650, 520],\n          [890, 380],\n          [890, 520],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Office\",\n      name: \"Office\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [460, 520],\n          [460, 780],\n          [650, 520],\n          [650, 780],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Room\",\n      name: \"Room\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [890, 360],\n          [890, 520],\n          [990, 360],\n          [990, 520],\n        ],\n        [\n          [650, 520],\n          [650, 780],\n          [990, 520],\n          [990, 780],\n        ],\n      ],\n    },\n  },\n] as Room[];\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { roomsData } from \"../../constants/floorPlanData\";\nimport Room from \"../../models/Room\";\n\nexport const fetchData = createAsyncThunk(\"home/fetchData\", () => roomsData);\n\ntype HomeState = {\n  rooms: Room[];\n};\n\nconst initialState: HomeState = {\n  rooms: [],\n};\n\nconst homeSlice = createSlice({\n  name: \"home\",\n  initialState,\n  reducers: {\n    setState(state, action: PayloadAction<HomeState>) {\n      // for (const key in Object.keys(state)) {\n      //   state[key] = action.payload[key]\n      // }\n      state.rooms = roomsData;\n    },\n    toggleLight(state, action: PayloadAction<{ roomId: string }>) {\n      const index = state.rooms.findIndex(\n        (room: Room) => room.properties.id === action.payload.roomId\n      );\n      debugger;\n      state.rooms[index].properties.isLightOn =\n        !state.rooms[index].properties.isLightOn;\n    },\n  },\n  extraReducers: (builder) => {\n    // FetchData\n    // builder.addCase(fetchData.pending, (state) => {\n    //   state.isLoading = true;\n    // });\n    // builder.addCase(fetchData.fulfilled, (state, action) => {\n    //   state.rooms = action.payload\n    // });\n    // builder.addCase(fetchData.rejected, (state, action) => {\n    //   console.log(action);\n    //   Alert.alert(\"There was an error\", action.error.message, [\n    //     { text: \"Close\", style: \"cancel\" },\n    //   ]);\n    // });\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setState, toggleLight } = homeSlice.actions;\n\nexport default homeSlice.reducer;\n","export type AcPower = boolean;\n\nexport type AcMode = \"auto\" | \"heat\" | \"cool\" | \"dry\" | \"fan\";\nexport const acModes: AcMode[] = [\"auto\", \"heat\", \"cool\", \"dry\", \"fan\"];\n\nexport type AcFanSpeed = \"low\" | \"medium\" | \"high\" | \"auto\";\nexport const acFanSpeeds: AcFanSpeed[] = [\"low\", \"medium\", \"high\", \"auto\"];\n\nexport type AcTemperatureLimits = {\n  min: number;\n  max: number;\n};\n\nexport type AcTemperature = {\n  [key in AcMode]: number;\n};\n\nexport type AcSettings = {\n  power: AcPower;\n  mode: AcMode;\n  fanSpeed: AcFanSpeed;\n  temperature: AcTemperature;\n};\n\nexport const acAvailableTemperature = (mode: AcMode) => {\n  let t_min: number | null;\n  let t_max: number | null;\n\n  switch (mode) {\n    case \"cool\" || \"dry\":\n      t_min = 19;\n      t_max = 30;\n      break;\n    case \"heat\":\n      t_min = 17;\n      t_max = 28;\n      break;\n    case \"auto\":\n      t_min = 17;\n      t_max = 30;\n      break;\n    case \"fan\":\n    default:\n      return null;\n  }\n\n  return {\n    min: t_min,\n    max: t_max,\n  } as AcTemperatureLimits;\n};\n","import {\n  acAvailableTemperature,\n  acFanSpeeds,\n  acModes,\n  AcSettings,\n} from \"@constants/ac_settings\";\nimport {\n  AsyncThunk,\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport { Alert } from \"react-native\";\n\nconst createAcAsyncThunk = (action: string) =>\n  createAsyncThunk(`ac/${action}`, async (correction: boolean | undefined) => {\n    if (!correction) {\n      console.log(`${action} on the server`);\n    }\n    console.log(`${action} in the state`);\n  });\n\nexport const raiseTemperature = createAcAsyncThunk(\"raiseTemperature\");\nexport const lowerTemperature = createAcAsyncThunk(\"lowerTemperature\");\nexport const turnOn = createAcAsyncThunk(\"turnOn\");\nexport const turnOff = createAcAsyncThunk(\"turnOff\");\nexport const changeFanSpeed = createAcAsyncThunk(\"changeFanSpeed\");\nexport const changeMode = createAcAsyncThunk(\"changeMode\");\n\ntype AcState = {\n  isLoading: boolean;\n  correctionMode: boolean;\n  settings: AcSettings;\n};\n\nconst initialState: AcState = {\n  isLoading: true,\n  correctionMode: false,\n  settings: {\n    power: false,\n    mode: \"cool\",\n    temperature: {\n      cool: 21,\n      dry: 21,\n      heat: 28,\n      auto: 22,\n      fan: 0,\n    },\n    fanSpeed: \"low\",\n  },\n};\n\nconst acSlice = createSlice({\n  name: \"ac\",\n  initialState,\n  reducers: {\n    toggleCorrectionMode(state: AcState) {\n      state.correctionMode = !state.correctionMode;\n    },\n  },\n  extraReducers: (builder) => {\n    // turnOn\n    builder.addCase(turnOn.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(turnOn.fulfilled, (state) => {\n      state.settings.power = true;\n      state.isLoading = false;\n    });\n    builder.addCase(turnOn.rejected, (state, action) => {\n      console.log(action);\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // turnOff\n    builder.addCase(turnOff.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(turnOff.fulfilled, (state, action) => {\n      state.settings.power = false;\n      state.isLoading = false;\n    });\n    builder.addCase(turnOff.rejected, (state, action) => {\n      console.log(action);\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // raiseTemperature\n    builder.addCase(raiseTemperature.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(raiseTemperature.fulfilled, (state) => {\n      const tempLimit = acAvailableTemperature(state.settings.mode)?.max;\n      const temp = state.settings.temperature[state.settings.mode];\n\n      if (tempLimit && temp && temp < tempLimit) {\n        state.settings.temperature[state.settings.mode] += 1;\n      }\n      state.isLoading = false;\n    });\n    builder.addCase(raiseTemperature.rejected, (state, action) => {\n      console.log(action);\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // lowerTemperature\n    builder.addCase(lowerTemperature.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(lowerTemperature.fulfilled, (state) => {\n      const tempLimit = acAvailableTemperature(state.settings.mode)?.min;\n      const temp = state.settings.temperature[state.settings.mode];\n\n      if (tempLimit && temp && temp > tempLimit) {\n        state.settings.temperature[state.settings.mode] -= 1;\n      }\n      state.isLoading = false;\n    });\n    builder.addCase(lowerTemperature.rejected, (state, action) => {\n      console.log(action);\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // changeFanSpeed\n    builder.addCase(changeFanSpeed.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(changeFanSpeed.fulfilled, (state) => {\n      const index = acFanSpeeds.findIndex(\n        (value) => value === state.settings.fanSpeed\n      );\n      state.settings.fanSpeed = acFanSpeeds[(index + 1) % acFanSpeeds.length];\n      state.isLoading = false;\n    });\n    builder.addCase(changeFanSpeed.rejected, (state, action) => {\n      console.log(action);\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // changeMode\n    builder.addCase(changeMode.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(changeMode.fulfilled, (state) => {\n      const index = acModes.findIndex((value) => value === state.settings.mode);\n      state.settings.mode = acModes[(index + 1) % acModes.length];\n      state.isLoading = false;\n    });\n    builder.addCase(changeMode.rejected, (state, action) => {\n      console.log(action);\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { toggleCorrectionMode } = acSlice.actions;\n\nexport default acSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./slices/auth\";\nimport homeReducer from \"./slices/home\";\nimport acReducer from \"./slices/ac\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    home: homeReducer,\n    ac: acReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport {\n  ActivityIndicator,\n  Pressable,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\n\nimport { Colors } from \"../../constants/styles\";\n\ntype Props = {\n  onPress: () => void;\n  isLoading?: boolean;\n  margin?: number;\n  disabled?: boolean;\n  children?: any;\n};\n\nconst Button: React.FC<Props> = ({\n  onPress,\n  isLoading,\n  disabled,\n  children,\n  margin,\n}) => {\n  const buttonStyles = { ...styles.button, margin: margin };\n  return (\n    <Pressable\n      style={({ pressed }) => [buttonStyles, pressed && styles.pressed]}\n      onPress={onPress}\n      disabled={!!isLoading}\n    >\n      <View>\n        {isLoading ? (\n          <ActivityIndicator size={\"small\"} color={Colors.neutral} />\n        ) : (\n          <Text style={styles.buttonText}>{children}</Text>\n        )}\n      </View>\n    </Pressable>\n  );\n};\n\nexport default Button;\n\nconst styles = StyleSheet.create({\n  button: {\n    borderRadius: 6,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: Colors.primary,\n    elevation: 2,\n    shadowColor: \"black\",\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  pressed: {\n    opacity: 0.7,\n  },\n  buttonText: {\n    textAlign: \"center\",\n    color: Colors.secondary,\n    fontSize: 16,\n    fontWeight: \"500\",\n  },\n});\n","import {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  TextInputProps,\n} from \"react-native\";\n\nimport { Colors } from \"../../constants/styles\";\n\ntype Type = React.FC<\n  TextInputProps & {\n    label: string;\n    secure?: boolean;\n    onUpdateValue: (value: string) => void;\n    isInvalid: boolean;\n  }\n>;\n\nconst Input: Type = (props) => {\n  const { label, keyboardType, secure, onUpdateValue, value, isInvalid } =\n    props;\n  return (\n    <View style={styles.inputContainer}>\n      <Text style={[styles.label, isInvalid && styles.labelInvalid]}>\n        {label}\n      </Text>\n      <TextInput\n        style={[styles.input, isInvalid && styles.inputInvalid]}\n        autoCapitalize=\"none\"\n        keyboardType={keyboardType}\n        secureTextEntry={secure}\n        onChangeText={onUpdateValue}\n        value={value}\n        {...props}\n      />\n    </View>\n  );\n};\n\nexport default Input;\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    marginVertical: 8,\n    borderBottomColor: Colors.primary,\n    borderBottomWidth: 1,\n  },\n  label: {\n    color: Colors.primary,\n    marginBottom: 4,\n  },\n  labelInvalid: {\n    color: Colors.error500,\n  },\n  input: {\n    paddingVertical: 8,\n    paddingHorizontal: 6,\n    backgroundColor: Colors.secondary,\n    borderRadius: 4,\n    fontSize: 16,\n  },\n  inputInvalid: {\n    backgroundColor: Colors.error100,\n  },\n});\n","import { useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store\";\n// import { useSelector } from \"react-redux\";\n// import { RootState } from \"../../store\";\n\nimport Button from \"../UI/Button\";\nimport Input from \"./Input\";\n\nexport type AuthData = {\n  username: string;\n  password: string;\n};\n\ntype AuthDataValidity = {\n  username: boolean;\n  password: boolean;\n};\n\ntype AuthFormProps = React.FC<{\n  isLogin?: boolean;\n  onSubmit: (props: AuthData) => void;\n  credentialsInvalid: AuthDataValidity;\n}>;\n\nconst AuthForm: AuthFormProps = ({ isLogin, onSubmit, credentialsInvalid }) => {\n  const [credentials, setCredentials] = useState({\n    username: \"Username#1\",\n    password: \"admin123@\",\n  });\n\n  const isLoading = useSelector((state: RootState) => state.auth.isLoading)\n\n  const { username: usernameIsInvalid, password: passwordIsInvalid } =\n    credentialsInvalid;\n\n  const updateInputValueHandler = (inputType: string, enteredValue: string) => {\n    setCredentials((credentials) => ({\n      ...credentials,\n      [inputType]: enteredValue,\n    }));\n  };\n\n  const submitHandler = async () => {\n    try {\n      // setIsLoading(true)\n      onSubmit({\n        username: credentials.username,\n        password: credentials.password,\n      }); \n      // setIsLoading(false)\n    } catch (err: any) {\n      console.log(err)\n      // setIsLoading(false)\n      throw new Error(err)\n    }\n  };\n\n  return (\n    <View style={styles.form}>\n      <View>\n        <Input\n          label=\"Username\"\n          onUpdateValue={(value) => updateInputValueHandler(\"username\", value)}\n          value={credentials.username}\n          isInvalid={usernameIsInvalid}\n        />\n        <Input\n          label=\"Password\"\n          onUpdateValue={(value) => updateInputValueHandler(\"password\", value)}\n          secure\n          value={credentials.password}\n          isInvalid={passwordIsInvalid}\n        />\n        <View style={styles.buttons}>\n          <Button onPress={submitHandler} isLoading={isLoading}>\n            {isLogin ? \"Log In\" : \"Sign Up\"}\n          </Button>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default AuthForm;\n\nconst styles = StyleSheet.create({\n  form: {},\n  buttons: {\n    marginTop: 12,\n  },\n});\n","import { useState } from \"react\";\nimport { Alert, StyleSheet, View } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport FlatButton from \"../UI/FlatButton\";\nimport AuthForm, { AuthData } from \"./AuthForm\";\nimport { Colors } from \"../../constants/styles\";\nimport { PasswordCredentials } from \"../../services/auth/authApi\";\n\ntype AuthContentProps = {\n  isLogin?: boolean;\n  onAuthenticate: (authData: PasswordCredentials) => void;\n};\n\nconst AuthContent: React.FC<AuthContentProps> = (props) => {\n  const { isLogin, onAuthenticate } = props;\n  const { navigate } = useNavigation();\n  const [credentialsInvalid, setCredentialsInvalid] = useState({\n    username: false,\n    password: false,\n  });\n\n  // const handleAuthModeSwitch = () => {\n  //   navigate(isLogin ? \"Signup\" : \"Login\");\n  // };\n\n  const handleSubmit = (credentials: AuthData) => {\n    let { username, password } = credentials;\n\n    username = username.trim();\n    password = password.trim();\n\n    const usernameIsValid = username.length >= 3;\n    const passwordIsValid = password.length > 6;\n\n    if (!usernameIsValid || !passwordIsValid) {\n      Alert.alert(\"Invalid input\", \"Please check your entered credentials.\");\n      setCredentialsInvalid({\n        username: !usernameIsValid,\n        password: !passwordIsValid,\n      });\n      return;\n    }\n    onAuthenticate({ username, password });\n  };\n\n  return (\n    <View style={styles.authContent}>\n      <AuthForm\n        isLogin={isLogin}\n        onSubmit={handleSubmit}\n        credentialsInvalid={credentialsInvalid}\n      />\n      {/* <View style={styles.buttons}>\n        <FlatButton onPress={handleAuthModeSwitch}>\n          {isLogin\n            ? \"Don't have an account? Sign up\"\n            : \"Already have an account? Log in\"}\n        </FlatButton>\n      </View> */}\n    </View>\n  );\n};\n\nexport default AuthContent;\n\nconst styles = StyleSheet.create({\n  authContent: {\n    marginTop: 64,\n    marginHorizontal: 32,\n    padding: 16,\n    borderRadius: 8,\n    backgroundColor: Colors.secondary,\n    elevation: 2,\n    shadowColor: \"black\",\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.35,\n    shadowRadius: 4,\n  },\n  buttons: {\n    marginTop: 8,\n  },\n});\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport AuthContent from \"@components/auth/AuthContent\";\nimport { AppDispatch } from \"@store\";\nimport { login } from \"@store/slices/auth\";\nimport { RootStackParamList } from \"../types\";\nimport { PasswordCredentials } from \"@services/Auth/authApi\";\n\n\ntype Props = NativeStackScreenProps<RootStackParamList, \"Login\">;\n\nconst LoginScreen: React.FC<Props> = (props) => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const handleLogin = async (credentials: PasswordCredentials) => {\n    try {\n      dispatch(login(credentials))\n    } catch (err: any) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <AuthContent\n      isLogin\n      onAuthenticate={handleLogin}\n    />\n  );\n};\n\nexport default LoginScreen;\n","import React from \"react\";\nimport {\n  ActivityIndicator,\n  Pressable,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\"\n\nimport { Colors } from \"../../constants/styles\";\n\ntype Props = {\n  onPress: () => void;\n  isLoading?: boolean;\n  disabled?: boolean;\n  children?: any;\n};\n\nconst ProfileButton: React.FC<Props> = ({ onPress, isLoading, disabled, children }) => {\n  return (\n    <Pressable\n      style={({ pressed }) => [styles.button, pressed && styles.pressed]}\n      onPress={onPress}\n      disabled={isLoading || disabled}\n    >\n      <AntDesign name=\"user\" size={24} color={Colors.neutral} />\n    </Pressable>\n  );\n};\n\nexport default ProfileButton;\n\nconst styles = StyleSheet.create({\n  button: {\n    borderRadius: 12,\n    borderColor: Colors.neutral,\n    borderWidth: 1,\n    // paddingVertical: 6,\n    // paddingHorizontal: 12,\n    // backgroundColor: Colors.primary500,\n    elevation: 2,\n    shadowColor: \"black\",\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  pressed: {\n    opacity: 0.7,\n  },\n  buttonText: {\n    textAlign: \"center\",\n    color: Colors.neutral,\n    fontSize: 16,\n    fontWeight: \"bold\",\n  },\n});\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { Colors } from \"../../../constants/styles\";\nimport Wall from \"../../../models/Wall\";\n\nconst lineWidth = 4;\n\nconst Line: React.FC<{ points: Wall[\"points\"] }> = (props) => {\n  const { points } = props;\n  const isHorizontal =\n    points[0][0] === points[1][0] && points[0][1] !== points[1][1];\n  const width = isHorizontal\n    ? points[1][1] - points[0][1] + lineWidth / 2\n    : lineWidth;\n  const height = isHorizontal\n    ? lineWidth\n    : points[1][0] - points[0][0] + lineWidth / 2;\n\n  const styles = stylesGenerator(points, width, height);\n\n  return <View style={styles.component} />;\n};\n\nconst stylesGenerator = (\n  points: Wall[\"points\"],\n  width: number,\n  height: number\n) =>\n  StyleSheet.create({\n    component: {\n      position: \"absolute\",\n      top: points[0][0] - lineWidth / 2,\n      start: points[0][1] - lineWidth / 2,\n      width: width,\n      height: height,\n      backgroundColor: Colors.neutral,\n    },\n  });\n\nexport default Line;\n","import Room from \"@models/Room\";\nimport Wall from \"@models/Wall\";\n\nconst maxXY = (coordinates: Room[]) => {\n  let maxX = 0;\n  let maxY = 0;\n  coordinates.forEach((polygon) =>\n    polygon.geometry.coordinates.forEach((point) =>\n      point.forEach((value) => {\n        if (maxX < value[0]) {\n          maxX = value[0];\n        }\n        if (maxY < value[1]) {\n          maxY = value[1];\n        }\n      })\n    )\n  );\n  return { maxX: maxX, maxY: maxY };\n};\n\nexport const traslateRoomCoordinatesToScale = (scale: number, coordinates: Room[]) => {\n  const { maxX, maxY } = maxXY(coordinates);\n\n  return coordinates.map((room) => {\n    const room_coordinates = room.geometry.coordinates.map((polygon) => {\n      const polygon_coordinates = polygon.map(\n        (value, index) =>\n          [\n            (value[0] - maxX / 2) / scale + index * 1,\n            (value[1] - maxY / 2) / scale + index * 1,\n          ] as [number, number]\n      );\n      return polygon_coordinates;\n    });\n    return {\n      ...room,\n      geometry: { type: room.geometry.type, coordinates: room_coordinates },\n    };\n  }) as Room[];\n};\n\nexport const traslateBuildingCoordinatesScale = (\n  scale: number,\n  walls: Wall[],\n  rooms: Room[]\n) => {\n  const { maxX, maxY } = maxXY(rooms);\n\n\n  return walls.map((wall, index) => {\n    const wall_points = wall.points.map((point) => [\n      (point[0] - maxX / 2) / scale + index * 0,\n      (point[1] - maxY / 2) / scale + index * 0,\n    ]) as Wall[\"points\"];\n    return { points: wall_points } as Wall;\n  });\n};\n\nexport const roomsCoordinates = (roomsData: Room[], scale: number) =>\n  traslateRoomCoordinatesToScale(2.1, roomsData);\n\nexport const builduingCoordinates = (walls: Wall[], roomsData: Room[], scale: number) =>\n  traslateBuildingCoordinatesScale(scale, walls, roomsData);\n","import { buildingData, roomsData } from \"@constants/floorPlanData\";\nimport React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport Line from \"./Line\";\nimport { builduingCoordinates } from \"./MapHelpers\";\n\nconst scale = 2.1\n\nconst Building: React.FC<{}> = (props) => {\n  return (\n    <>\n      {builduingCoordinates(buildingData, roomsData, scale).map((wall) => (\n        <Line\n          points={wall.points}\n          key={`${wall.points[0][0]}${wall.points[0][1]}${wall.points[1][0]}${wall.points[1][1]}`}\n        />\n      ))}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {},\n});\n\nexport default Building;\n","import React, { useState } from \"react\";\nimport { Text, StyleSheet, Pressable, View } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Colors } from \"@constants/styles\";\nimport Room from \"@models/Room\";\nimport { RootState } from \"@store\";\nimport { toggleLight } from \"@store/slices/home\";\n\nconst createPolygonPosition = (points: [number, number][]) => {\n  const style = StyleSheet.create({\n    polygon: {\n      position: \"absolute\",\n      top: points[0][0],\n      start: points[0][1],\n    },\n  });\n\n  return style.polygon;\n};\n\nconst createPolygonSize = (points: [number, number][]) => {\n  let height = Math.abs(points[0][0] - points[2][0]);\n  let width = Math.abs(points[0][1] - points[1][1]);\n\n  const style = StyleSheet.create({\n    polygon: {\n      width: width,\n      height: height,\n    },\n  });\n\n  return style.polygon;\n};\n\nconst RoomContainer: React.FC<{\n  coordinates: [number, number][];\n  properties: { id: string; name: string; empty: boolean };\n}> = (props) => {\n  const dispatch = useDispatch();\n  const { coordinates, properties } = props;\n\n  const isLightOn = useSelector(\n    (state: RootState) =>\n      !!state.home.rooms.find(\n        (room: Room) => room.properties.id === properties.id\n      )?.properties.isLightOn\n  );\n\n  let backgroundColor = isLightOn ? Colors.light : undefined;\n  backgroundColor = properties.empty ? Colors.neutral : backgroundColor;\n\n  return (\n    <Pressable\n      onPress={() => {\n        if (!properties.empty) {\n          dispatch(toggleLight({ roomId: properties.id }));\n        }\n      }}\n      style={createPolygonPosition(coordinates)}\n    >\n      <View\n        style={{\n          ...createPolygonSize(coordinates),\n          ...styles.component,\n          backgroundColor: backgroundColor,\n        }}\n      >\n        <Text\n          style={{\n            ...styles.label,\n            color: isLightOn ? Colors.primary : Colors.neutral,\n          }}\n        >\n          {properties.name}\n        </Text>\n      </View>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    // borderColor: Colors.neutral,\n    // borderWidth: 2,\n\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  label: {\n    color: Colors.neutral,\n    fontSize: 8,\n  },\n});\n\nexport default RoomContainer;\n","import { roomsData } from \"@constants/floorPlanData\";\nimport React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { roomsCoordinates } from \"./MapHelpers\";\nimport RoomContainer from \"./RoomContainer\";\n\nconst scale = 2.1\n\nconst Rooms: React.FC<{}> = (props) => {\n  return (\n    <>\n      {roomsCoordinates(roomsData, scale).map((roomData) =>\n        roomData.geometry.coordinates.map((polygon, index) => (\n          <RoomContainer\n            coordinates={polygon}\n            properties={roomData.properties}\n            key={roomData.properties.name + index}\n          />\n        ))\n      )}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {},\n});\n\nexport default Rooms;\n","import React from \"react\";\nimport { Image, Pressable, StyleSheet, View } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ReactNativeZoomableView } from \"@openspacelabs/react-native-zoomable-view\";\nimport Navigation from \"@navigation/Navigation\";\nimport Button from \"@components/UI/Button\";\nimport Map from \"./Map\";\nimport Building from \"./Building\";\nimport Rooms from \"./Rooms\";\nimport { Props as HomeScreenNavigationProps } from \"../../../screens/HomeScreen\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { RootStackParamList } from \"../../../screens/types\";\n\ntype NavProps = NativeStackNavigationProp<\n  RootStackParamList,\n  \"Home\",\n  undefined\n>;\n\nconst FloorPlan: React.FC<{}> = (props) => {\n  const { navigate } = useNavigation<NavProps>();\n\n  // <ReactNativeZoomableView\n  //   zoomEnabled={true}\n  //   maxZoom={5}\n  //   minZoom={0.1}\n  //   zoomStep={0.25}\n  //   initialZoom={1}\n  //   bindToBorders={true}\n  //   style={styles.component}\n  // >\n  return (\n    <View style={styles.component}>\n      <Pressable\n        onPress={() => navigate(\"AcRemote\")}\n        style={styles.imageContainer}\n      >\n        <Image\n          source={require(\"../../../assets/icons/air-conditioner-colored.png\")}\n          style={styles.image}\n        />\n      </Pressable>\n      <View>\n        <Rooms />\n        <Building />\n      </View>\n    </View>\n  );\n  // </ReactNativeZoomableView>\n};\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  imageContainer: {\n    position: \"absolute\",\n    end: \"10%\",\n    top: \"10%\",\n    height: 150,\n    width: 150,\n  },\n  image: {\n    height: 150,\n    width: 150,\n  },\n});\n\nexport default FloorPlan;\n","import React, { useLayoutEffect } from \"react\";\nimport { View, Text, StyleSheet, Image, Pressable } from \"react-native\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\n\nimport { RootStackParamList } from \"./types\";\nimport { logout } from \"../store/slices/auth\";\nimport Button from \"../components/UI/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../store\";\nimport ProfileButton from \"../components/user/ProfileButton\";\nimport FloorPlan from \"../components/Home/FloorPlan/FloorPlan\";\nimport { Colors } from \"../constants/styles\";\n\nexport type Props = NativeStackScreenProps<RootStackParamList, \"Home\">;\n\nconst HomeScreen: React.FC<Props> = (props) => {\n  const { navigation } = props;\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <ProfileButton onPress={() => navigation.navigate(\"Profile\")} />\n      ),\n    });\n  }, [navigation]);\n\n  return (\n    <View style={styles.rootContainer}>\n      \n      <FloorPlan />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  rootContainer: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 8,\n  },\n  imageContainer: {\n    height: 50,\n    width: 50,\n    backgroundColor: \"pink\",\n  },\n  image: {\n    height: 50,\n    width: 50,\n  },\n});\n\nexport default HomeScreen;\n","import React from 'react'\nimport { View, Text, StyleSheet } from 'react-native'\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from './types'\nimport { useDispatch } from 'react-redux';\nimport Button from '../components/UI/Button';\nimport { logout } from '../store/slices/auth';\nimport { AppDispatch } from '../store';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Profile'>;\n\nconst ProfileScreen: React.FC<Props> = (props) => {\n  const { navigation } = props\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <View style={styles.screen}>\n      <Button onPress={() => dispatch(logout())}>Logout</Button> \n    </View>\n  )\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  }\n});\n\nexport default ProfileScreen;","import React from \"react\";\nimport { Pressable, Text, StyleSheet } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"@store\";\nimport { toggleCorrectionMode } from \"@store/slices/ac\";\nimport { Colors } from \"@constants/styles\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst CorrectionModeButton: React.FC<{}> = (props) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const handlePress = () => dispatch(toggleCorrectionMode());\n  const isCorrectionMode = useSelector((state: RootState) => state.ac.correctionMode)\n\n  return (\n    <Pressable onPress={handlePress} style={styles.component}>\n      <Ionicons\n        name={isCorrectionMode ? \"ios-settings\" : \"ios-settings-outline\"}\n        size={32}\n        color={Colors.secondary}\n      />\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {},\n});\n\nexport default CorrectionModeButton;\n","import React from \"react\";\nimport { View, Pressable, StyleSheet } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"@store\";\nimport { Colors } from \"@constants/styles\";\nimport { AsyncThunk } from \"@reduxjs/toolkit\";\n\nconst RemoteBaseButton: React.FC<{\n  children?: any;\n  dispatchAction: AsyncThunk<void, boolean | undefined, {}>;\n  empty?: boolean;\n}> = (props) => {\n  const { children, dispatchAction, empty } = props;\n  const dispatch = useDispatch<AppDispatch>();\n  const isCorrectionMode = useSelector(\n    (state: RootState) => state.ac.correctionMode\n  );\n\n  const handlePress = () => {\n    dispatch(dispatchAction(isCorrectionMode));\n  };\n\n  const handleLongPress = () => {\n    dispatch(dispatchAction(true));\n  };\n\n  return (\n    <Pressable\n      onPress={handlePress}\n      onLongPress={handleLongPress}\n      style={componentStyle(empty)}\n    >\n      {children}\n    </Pressable>\n  );\n};\n\nconst componentStyle = (isEmpty: boolean | undefined) => {\n  const stl = StyleSheet.create({\n    component: {\n      width: 112,\n      height: 64,\n      borderRadius: 8,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: isEmpty ? Colors.transparent : Colors.secondary,\n      outlineStyle: \"none\",\n      shadowRadius: 8,\n      shadowOpacity: isEmpty ? 0 : 0.4,\n      shadowOffset: { height: 4, width: 0 },\n      elevation: isEmpty ? 0 : 1,\n    },\n  });\n\n  return stl.component;\n};\n\nexport default RemoteBaseButton;\n","import React from \"react\";\nimport { changeFanSpeed } from \"@store/slices/ac\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { Colors } from \"@constants/styles\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { SlideInRight, SlideOutRight } from \"react-native-reanimated\";\n\nconst FanSpeedButton: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  return (\n    <RemoteBaseButton\n      dispatchAction={changeFanSpeed}\n      empty={!isOn}\n    >\n      <FontAwesome5 name=\"fan\" size={48} color={Colors.neutral} />\n    </RemoteBaseButton>\n  );\n};\n\nexport default FanSpeedButton;\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesome5, Ionicons, MaterialIcons } from \"@expo/vector-icons\";\nimport { RootState } from \"@store\";\nimport { changeMode } from \"@store/slices/ac\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport { Colors } from \"@constants/styles\";\n\nconst ModeButton: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  const handlePress = () => console.log(\"ModeButton\");\n  return (\n    <RemoteBaseButton\n      dispatchAction={changeMode}\n      empty={!isOn}\n    >\n      <View style={styles.mainContainer}>\n        <View style={styles.topContainer}>\n          <FontAwesome5\n            name=\"snowflake\"\n            size={18}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n          <Ionicons\n            name=\"water\"\n            size={18}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n          <FontAwesome5\n            name=\"fan\"\n            size={18}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n        </View>\n        <View style={styles.bottomContainer}>\n          <FontAwesome5\n            name=\"sun\"\n            size={18}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n          <MaterialIcons\n            name=\"brightness-auto\"\n            size={18}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n        </View>\n      </View>\n    </RemoteBaseButton>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    color: Colors.neutral,\n    fontWeight: \"bold\",\n  },\n  mainContainer: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"space-around\",\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  icon: {\n    marginHorizontal: 2,\n  },\n});\n\nexport default ModeButton;\n","import React from \"react\";\nimport { Image, StyleSheet } from \"react-native\";\nimport { turnOn, turnOff } from \"@store/slices/ac\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { SlideInRight, SlideOutRight } from \"react-native-reanimated\";\n\nconst PowerButton: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  return (\n    <RemoteBaseButton\n      dispatchAction={isOn ? turnOff : turnOn}\n    >\n      {isOn ? (\n        <Image\n          source={require(\"../../../assets/icons/off.png\")}\n          style={styles.image}\n        />\n      ) : (\n        <Image\n          source={require(\"../../../assets/icons/on.png\")}\n          style={styles.image}\n        />\n      )}\n    </RemoteBaseButton>\n  );\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    height: 48,\n    width: 48,\n  },\n});\nexport default PowerButton;\n","import { Colors } from \"@constants/styles\";\nimport React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\n\nconst Arrow: React.FC<{ direction: keyof typeof styles }> = (props) => {\n  const { direction } = props;\n\n  return <View style={{ ...styles.arrow, ...styles[direction] }}></View>;\n};\n\nconst styles = StyleSheet.create({\n  arrow: {\n    width: 0,\n    height: 0,\n\n    borderStartWidth: 16,\n    borderStartColor: \"rgba(0, 0, 0, 0)\",\n\n    borderEndWidth: 16,\n    borderEndColor: \"rgba(0, 0, 0, 0)\",\n\n    borderBottomWidth: 16,\n    borderBottomColor: Colors.neutral,\n  },\n  up: {\n    transform: [{ rotate: \"0deg\" }],\n  },\n  down: {\n    transform: [{ rotate: \"180deg\" }],\n  },\n});\n\nexport default Arrow;\n","import React from \"react\";\nimport { Image, StyleSheet, View } from \"react-native\";\nimport { lowerTemperature } from \"@store/slices/ac\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport Arrow from \"./Arrow\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { SlideInLeft, SlideOutLeft } from \"react-native-reanimated\";\n\nconst TemperatureDownButton: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  const handlePress = () => console.log(\"TempDownButton\");\n\n  return (\n    <RemoteBaseButton\n      dispatchAction={lowerTemperature}\n      empty={!isOn}\n      // entering={SlideInLeft}\n      // exiting={SlideOutLeft}\n    >\n      <View style={styles.imageContainer}>\n        <Arrow direction=\"down\" />\n        <Image\n          source={require(\"../../../assets/icons/cold.png\")}\n          style={styles.image}\n        />\n      </View>\n    </RemoteBaseButton>\n  );\n};\n\nconst styles = StyleSheet.create({\n  imageContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingLeft: 12,\n  },\n  image: {\n    height: 48,\n    width: 48,\n    marginLeft: 8,\n  },\n});\n\nexport default TemperatureDownButton;\n","import React from \"react\";\nimport { Image, StyleSheet, View } from \"react-native\";\nimport { raiseTemperature } from \"@store/slices/ac\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport Arrow from \"./Arrow\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { SlideInRight, SlideOutRight } from \"react-native-reanimated\";\n\nconst TemperatureUpButton: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  const handlePress = () => console.log(\"TempUpButton\");\n\n  return (\n    <RemoteBaseButton\n      dispatchAction={raiseTemperature}\n      empty={!isOn}\n      // entering={SlideInRight}\n      // exiting={SlideOutRight}\n    >\n      <View style={styles.imageContainer}>\n        <Arrow direction=\"up\" />\n        <Image\n          source={require(\"../../../assets/icons/hot.png\")}\n          style={styles.image}\n        />\n      </View>\n    </RemoteBaseButton>\n  );\n};\n\nconst styles = StyleSheet.create({\n  imageContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingLeft: 12,\n  },\n  image: {\n    height: 48,\n    width: 48,\n    marginLeft: 8,\n  },\n});\n\nexport default TemperatureUpButton;\n","import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport FanSpeedButton from \"./FanSpeedButtton\";\nimport ModeButton from \"./ModeButton\";\nimport PowerButton from \"./PowerButton\";\nimport TemperatureDownButton from \"./TemperatureDownButton\";\nimport TemperatureUpButton from \"./TemperatureUpButton\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\n\nconst AcButtons: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  return (\n    <>\n      <View style={styles.buttons}>\n        <>\n          <View style={styles.buttonsColumn}>\n            {isOn && (\n              <>\n                <TemperatureUpButton />\n                <TemperatureDownButton />\n                <ModeButton />\n              </>\n            )}\n          </View>\n          <View style={styles.buttonsColumn}>\n            <PowerButton />\n            {isOn && (\n              <>\n                <FanSpeedButton />\n                <View style={styles.emptySpace}></View>\n              </>\n            )}\n          </View>\n        </>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    height: \"55%\",\n    paddingVertical: 32,\n  },\n  powerButtonContainer: {\n    flexDirection: \"row-reverse\",\n    width: \"100%\",\n    height: \"55%\",\n  },\n  buttonsColumn: {\n    flexDirection: \"column\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  emptySpace: {\n    width: 128,\n    height: 64,\n  },\n});\n\nexport default AcButtons;\n","import React, { useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { Colors } from \"@constants/styles\";\n\nconst Temperature: React.FC<{}> = (props) => {\n  const temperature = useSelector(\n    (state: RootState) => state.ac.settings.temperature[state.ac.settings.mode]\n  );\n  const mode = useSelector((state: RootState) => state.ac.settings.mode);\n  const [dynamicStyle, setDynamicStyle] = useState({});\n\n  useEffect(() => {\n    setDynamicStyle([\n      mode === \"fan\" ? { color: Colors.disabled } : { color: Colors.neutral },\n    ]);\n  }, [mode]);\n\n  return (\n    <View style={styles.component}>\n      <Text style={[styles.generalText, styles.temperatureText, dynamicStyle]}>\n        {mode === \"fan\" ? \"N/A\" : temperature}\n      </Text>\n      <Text style={[styles.generalText, styles.units, dynamicStyle]}>\n        {mode !== \"fan\" && \"°C\"}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n  },\n  generalText: {\n    fontWeight: \"bold\",\n  },\n  temperatureText: {\n    fontSize: 128,\n  },\n  units: {\n    fontSize: 32,\n    fontWeight: \"bold\",\n  },\n});\n\nexport default Temperature;\n","import React, { useEffect, useRef } from \"react\";\nimport { View, StyleSheet} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { Colors } from \"@constants/styles\";\nimport { FontAwesome5, MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nconst Fan: React.FC<{}> = (props) => {\n  const speed = useSelector((state: RootState) => state.ac.settings.fanSpeed);\n\n  // const animationValue = useRef(new Animated.Value(0)).current;\n  // const spin = animationValue.interpolate({\n  //   inputRange: [0, 1],\n  //   outputRange: [\"0deg\", \"360deg\"],\n  // });\n\n  // useEffect(() => {\n  //   animationValue.stopAnimation();\n  //   animationValue.setValue(0);\n\n  //   if (speed !== \"auto\") {\n  //     const loop = Animated.loop(\n  //       Animated.timing(animationValue, {\n  //         toValue: 1,\n  //         duration: 2000,\n  //         easing: Easing.linear,\n  //         useNativeDriver: true,\n  //       })\n  //     );\n  //     loop.start();\n  //     return () => loop.stop();\n  //   }\n  // }, [speed]);\n\n  if (speed === \"auto\") {\n    return (\n      <View style={styles.component}>\n        <MaterialCommunityIcons\n          name=\"fan-auto\"\n          size={32}\n          color={Colors.neutral}\n          style={styles.icon}\n        />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.component}>\n      <View\n        // style={{\n        //   transform: [{ rotate: spin }],\n        // }}\n      >\n        <FontAwesome5\n          name=\"fan\"\n          size={16}\n          color={Colors.neutral}\n          style={styles.icon}\n        />\n      </View>\n      {(speed === \"medium\" || speed === \"high\") && (\n        <View\n          // style={{\n          //   transform: [{ rotate: spin }],\n          // }}\n        >\n          <FontAwesome5\n            name=\"fan\"\n            size={24}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n        </View>\n      )}\n      {speed === \"high\" && (\n        <View\n          // style={{\n          //   transform: [{ rotate: spin }],\n          // }}\n        >\n          <FontAwesome5\n            name=\"fan\"\n            size={32}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    flexDirection: \"row\",\n    height: \"100%\",\n    alignItems: \"flex-end\",\n    // justifyContent: 'flex-start'\n  },\n  text: {\n    color: Colors.neutral,\n  },\n  icon: {\n    margin: 5,\n  },\n});\n\nexport default Fan;\n","import { RootState } from \"@store\";\nimport React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesome5, Ionicons, MaterialIcons } from \"@expo/vector-icons\";\nimport { Colors } from \"@constants/styles\";\n\nconst Mode: React.FC<{}> = (props) => {\n  const mode = useSelector((state: RootState) => state.ac.settings.mode);\n\n  return (\n    <View style={styles.component}>\n      {/* <Text style={styles.text}>Mode</Text> */}\n      {mode === \"cool\" && (\n        <FontAwesome5\n          name=\"snowflake\"\n          size={32}\n          color={Colors.neutral}\n          // style={styles.icon}\n        />\n      )}\n      {mode === \"dry\" && (\n        <Ionicons\n          name=\"water\"\n          size={32}\n          color={Colors.neutral}\n          // style={styles.icon}\n        />\n      )}\n      {mode === \"fan\" && (\n        <FontAwesome5\n          name=\"fan\"\n          size={32}\n          color={Colors.neutral}\n          // style={styles.icon}\n        />\n      )}\n      {mode === \"heat\" && (\n        <FontAwesome5\n          name=\"sun\"\n          size={32}\n          color={Colors.neutral}\n          // style={styles.icon}\n        />\n      )}\n      {mode === \"auto\" && (\n        <MaterialIcons\n          name=\"brightness-auto\"\n          size={32}\n          color={Colors.neutral}\n          // style={styles.icon}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  // text: {\n  //   marginBottom: 6,\n  //   color: Colors.primary100,\n  // },\n});\n\nexport default Mode;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport Temperature from \"./Temperature\";\nimport Fan from \"./Fan\";\nimport Mode from \"./Mode\";\nimport { Colors } from \"@constants/styles\";\n\nconst AcDisplay: React.FC<{}> = (props) => {\n  const state = useSelector((state: RootState) => state.ac);\n\n  return (\n    <View style={styles.component}>\n      {state.settings.power ? (\n        <>\n          <Temperature />\n          <View style={styles.bottomBar}>\n            <Fan />\n            {state.correctionMode && (\n              <Text style={styles.infoText}>CORRECTION MODE!</Text>\n            )}\n            <Mode />\n          </View>\n        </>\n      ) : (\n        <Text style={styles.offText}>Turn me on, baby!</Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n    width: \"100%\",\n    padding: 32,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.secondary,\n    borderRadius: 8,\n    shadowColor: \"black\",\n    shadowRadius: 8,\n    shadowOpacity: 0.4,\n    shadowOffset: { height: 4, width: 0 },\n    elevation: 1,\n  },\n  bottomBar: {\n    width: \"100%\",\n    height: 42,\n    marginTop: 32,\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n  },\n  offText: {\n    fontSize: 32,\n    color: Colors.neutral,\n  },\n  infoText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlignVertical: \"center\",\n    color: Colors.warning,\n  },\n});\n\nexport default AcDisplay;\n","import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport AcButtons from \"./Buttons\";\nimport AcDisplay from \"./Display\";\n\nconst Remote: React.FC<{}> = (props) => {\n  return (\n    <View style={styles.component}>\n      <AcDisplay />\n      <AcButtons />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n    marginHorizontal: \"6%\",\n    marginVertical: \"12%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  display: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    height: \"35%\",\n    borderWidth: 1,\n    borderColor: \"white\",\n  },\n});\n\nexport default Remote;\n","import React, { useLayoutEffect } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport Navigation from \"@navigation/Navigation\";\nimport CorrectionModeButton from \"@components/AcController/Buttons/CorrectionModeButton\";\nimport Remote from \"@components/AcController/Remote\";\nimport { RootState } from \"@store\";\nimport { RootStackParamList } from \"./types\";\n\ntype Props = NativeStackScreenProps<RootStackParamList, \"Profile\">;\n\nconst AcRemoteScreen: React.FC<Props> = (props) => {\n  const { navigation } = props;\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => isOn && <CorrectionModeButton />,\n    });\n  }, [isOn, navigation]);\n  return <Remote />;\n};\n\nconst styles = StyleSheet.create({\n  component: {},\n});\n\nexport default AcRemoteScreen;\n","import { NavigationContainer, DarkTheme } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Colors } from \"../constants/styles\";\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport AcRemoteScreen from \"../screens/AcRemoteScreen\";\nimport { isAuthenticated } from \"../services/auth/authApi\";\nimport { getAuthDataFromSecureAsync } from \"../services/auth/localAuth\";\nimport { AppDispatch, RootState } from \"../store\";\nimport { checkLoginData, setState } from \"../store/slices/auth\";\nimport {\n  createDrawerNavigator,\n  DrawerContent,\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n  DrawerItem,\n  DrawerItemList,\n  DrawerToggleButton,\n} from \"@react-navigation/drawer\";\nimport { useLayoutEffect } from \"react\";\n\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst AuthStack = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: Colors.primary },\n        headerTintColor: Colors.neutral,\n        headerShadowVisible: false,\n        contentStyle: { backgroundColor: Colors.primary },\n      }}\n    >\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n    </Stack.Navigator>\n  );\n};\n\nconst CustomDrawerContent = (props: DrawerContentComponentProps) => {\n  return (\n    <DrawerContentScrollView>\n      {/* <DrawerItemList /> */}\n      <DrawerContent {...props} />\n      <DrawerItem\n        label=\"Logout\"\n        inactiveTintColor={Colors.danger}\n        onPress={() => console.log(\"LOGOUT\")}\n      />\n    </DrawerContentScrollView>\n  );\n};\n\nconst AuthenticatedDrawer = () => {\n  return (\n    <Drawer.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: Colors.primary,\n        },\n        headerShadowVisible: false,\n        headerTintColor: Colors.neutral,\n        drawerContentStyle: { backgroundColor: Colors.secondary },\n        sceneContainerStyle: { backgroundColor: Colors.primary },\n        headerLeft: () => <DrawerToggleButton tintColor={Colors.secondary} />,\n      }}\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\n    >\n      <Drawer.Screen name=\"Home\" component={HomeScreen} />\n      <Drawer.Screen name=\"Air Conditioner\" component={AcRemoteScreen} />\n      <Drawer.Screen name=\"Profile\" component={ProfileScreen} />\n    </Drawer.Navigator>\n  );\n};\n\nconst Navigation = () => {\n  // check secure storage for token\n  const dispatch = useDispatch<AppDispatch>();\n\n  const isLoggedIn = useSelector((state: RootState) =>\n    isAuthenticated(state.auth)\n  );\n\n  const getDataFromLocalStorage = async () => {\n    const authData = await getAuthDataFromSecureAsync();\n    // if token is present\n    console.log(\"authData in navigation\", authData);\n    if (authData && authData.token) {\n      // - if token is valid then store it in state\n      if (isAuthenticated(authData)) {\n        setState(authData);\n      } else {\n        // - else call refresh token function\n        console.log(\"Calling refresh function because token is expired\");\n      }\n      // else don't do anything\n    }\n  };\n\n  useLayoutEffect(() => {\n    // getDataFromLocalStorage();\n    dispatch(checkLoginData())\n  }, []);\n\n  return (\n    <NavigationContainer>\n      {isLoggedIn ? <AuthenticatedDrawer /> : <AuthStack />}\n    </NavigationContainer>\n  );\n};\nexport default Navigation;\n","import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, useColorScheme } from \"react-native\";\nimport { SafeAreaProvider, SafeAreaView } from \"react-native-safe-area-context\";\nimport { Provider } from \"react-redux\";\nimport { Colors } from \"./constants/styles\";\nimport { store } from \"./store\";\nimport Navigation from \"./navigation/Navigation\";\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <SafeAreaView style={styles.container}>\n        <StatusBar style=\"light\" />\n        <Provider store={store}>\n          <Navigation />\n        </Provider>\n      </SafeAreaView>\n    </SafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.primary,\n    color: Colors.neutral,\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/air-conditioner-colored.f53f3bbe.png\";","module.exports = __webpack_public_path__ + \"static/media/off.a5b38215.png\";","module.exports = __webpack_public_path__ + \"static/media/on.c7cf9c21.png\";","module.exports = __webpack_public_path__ + \"static/media/cold.28e49a1b.png\";","module.exports = __webpack_public_path__ + \"static/media/hot.a3bc03ae.png\";"],"sourceRoot":""}