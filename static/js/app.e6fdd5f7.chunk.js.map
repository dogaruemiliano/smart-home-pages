{"version":3,"sources":["constants/styles.ts","constants/api.ts","services/auth/authApi.ts","services/auth/localAuth.ts","store/slices/auth.ts","constants/floorPlanData.ts","store/slices/home.ts","constants/ac_settings.ts","store/slices/ac.ts","services/conversions.ts","store/index.ts","components/UI/Button.tsx","components/auth/Input.tsx","components/auth/AuthForm.tsx","components/auth/AuthContent.tsx","screens/auth/LoginScreen.tsx","components/user/ProfileButton.tsx","components/Home/FloorPlan/Line.tsx","components/Home/FloorPlan/MapHelpers.ts","components/Home/FloorPlan/Building.tsx","components/Home/FloorPlan/RoomContainer.tsx","components/Home/FloorPlan/Rooms.tsx","components/Home/FloorPlan/FloorPlan.tsx","screens/HomeScreen.tsx","screens/ProfileScreen.tsx","components/AcController/Buttons/CorrectionModeButton.tsx","components/AcController/Buttons/RemoteBaseButton.tsx","components/AcController/Buttons/FanSpeedButtton.tsx","components/AcController/Buttons/ModeButton.tsx","components/AcController/Buttons/PowerButton.tsx","components/AcController/Buttons/Arrow.tsx","components/AcController/Buttons/TemperatureDownButton.tsx","components/AcController/Buttons/TemperatureUpButton.tsx","components/AcController/Buttons/index.tsx","components/AcController/Display/Temperature.tsx","components/AcController/Display/Fan.tsx","components/AcController/Display/Mode.tsx","components/AcController/Display/index.tsx","components/AcController/Remote.tsx","screens/AcRemoteScreen.tsx","navigation/Navigation.tsx","App.tsx","assets/icons/air-conditioner-colored.png","assets/icons/off.png","assets/icons/on.png","assets/icons/cold.png","assets/icons/hot.png"],"names":["Colors","BASE_URL","loginWithPassword","credentials","sendAuthRequest","loginWithRefreshToken","refresh_token","refreshToken","username","isAuthenticated","authData","token","createdAt","expiresIn","Date","now","grantType","response","fetch","method","headers","body","JSON","stringify","client_id","grant_type","ok","errorResponseData","json","console","log","Error","data","access_token","tokenType","token_type","expires_in","created_at","responseDataToAuthData","getAuthDataFromSecureAsync","storeMethod","Platform","OS","AsyncStorage","getItem","SecureStore","storedValue","parse","err","storeAuthDataToSecureAsync","setItem","stringValue","login","createAsyncThunk","thunkApi","credentialsFromState","getState","auth","logout","initialState","isLoading","authSlice","createSlice","name","reducers","setAuthState","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","Alert","alert","error","message","text","style","actions","buildingData","points","roomsData","properties","id","isLightOn","empty","geometry","type","coordinates","homeSlice","rooms","setState","toggleLight","index","findIndex","room","roomId","acModes","acFanSpeeds","acAvailableTemperature","mode","t_min","t_max","min","max","createAcAsyncThunk","correction","str","AuthorizationStr","dispatch","replace","letter","toLowerCase","Authorization","user","raiseTemperature","lowerTemperature","togglePower","changeFanSpeed","changeMode","fetchAcState","acSlice","correctionMode","settings","power","temperatures","cool","dry","heat","auto","fan","fanSpeed","toggleCorrectionMode","setAcState","tempLimit","temp","value","length","store","configureStore","reducer","authReducer","home","homeReducer","ac","acReducer","Button","onPress","children","disabled","margin","buttonStyles","styles","button","Pressable","pressed","View","ActivityIndicator","size","color","Text","buttonText","StyleSheet","create","borderRadius","paddingVertical","paddingHorizontal","backgroundColor","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","opacity","textAlign","fontSize","fontWeight","Input","props","label","keyboardType","secure","onUpdateValue","isInvalid","inputContainer","labelInvalid","TextInput","input","inputInvalid","autoCapitalize","secureTextEntry","onChangeText","marginVertical","borderBottomColor","borderBottomWidth","marginBottom","AuthForm","isLogin","onSubmit","credentialsInvalid","useState","password","setCredentials","useSelector","usernameIsInvalid","passwordIsInvalid","updateInputValueHandler","inputType","enteredValue","submitHandler","form","buttons","marginTop","AuthContent","onAuthenticate","useNavigation","navigate","setCredentialsInvalid","authContent","trim","usernameIsValid","passwordIsValid","marginHorizontal","padding","LoginScreen","useDispatch","a","async","ProfileButton","AntDesign","borderColor","borderWidth","stylesGenerator","component","position","top","lineWidth","start","Line","isHorizontal","maxXY","maxX","maxY","forEach","polygon","point","roomsCoordinates","scale","map","room_coordinates","traslateRoomCoordinatesToScale","builduingCoordinates","walls","wall","traslateBuildingCoordinatesScale","Building","createPolygonSize","Math","abs","justifyContent","alignItems","RoomContainer","find","undefined","Rooms","roomData","flex","imageContainer","end","image","FloorPlan","Image","source","require","rootContainer","title","HomeScreen","navigation","useLayoutEffect","setOptions","headerRight","screen","ProfileScreen","CorrectionModeButton","isCorrectionMode","Ionicons","componentStyle","isEmpty","outlineStyle","RemoteBaseButton","dispatchAction","onLongPress","FanSpeedButton","isOn","FontAwesome5","mainContainer","flexDirection","topContainer","bottomContainer","icon","ModeButton","MaterialIcons","PowerButton","arrow","borderStartWidth","borderStartColor","borderEndWidth","borderEndColor","up","transform","rotate","down","Arrow","direction","paddingLeft","marginLeft","TemperatureDownButton","TemperatureUpButton","powerButtonContainer","buttonsColumn","emptySpace","AcButtons","generalText","temperatureText","units","Temperature","temperature","dynamicStyle","setDynamicStyle","useEffect","Fan","speed","MaterialCommunityIcons","Mode","bottomBar","offText","infoText","textAlignVertical","AcDisplay","display","Remote","AcRemoteScreen","Stack","createNativeStackNavigator","Drawer","createDrawerNavigator","AuthStack","Navigator","screenOptions","headerStyle","headerTintColor","headerShadowVisible","contentStyle","Screen","CustomDrawerContent","DrawerContentScrollView","DrawerContent","DrawerItem","inactiveTintColor","AuthenticatedDrawer","drawerContentStyle","sceneContainerStyle","headerLeft","DrawerToggleButton","tintColor","drawerContent","Navigation","isReady","setIsReady","ws","useRef","WebSocket","current","isLoggedIn","savedAuthData","hideAsync","setup","onopen","send","onmessage","e","onerror","onclose","NavigationContainer","App","StatusBar","preventAutoHideAsync","container","module","exports"],"mappings":"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","file":"static/js/app.e6fdd5f7.chunk.js","sourcesContent":["export const Colors = {\n  primary: \"#011936\",\n  primary100: \"rgba(19,21,21, 0.5)\",\n  secondary: \"#F4FFFD\",\n  warning: \"#F9DC5C\",\n  danger: \"#ED254E\",\n  neutral: \"#011936\",\n  error100: \"#F7A1B2\",\n  error500: \"#EB1E47\",\n  light: \"#ffffbf\",\n  transparent: \"rgba(0, 0, 0, 0)\",\n  disabled: \"#EBEBE4\",\n\n  // dark: {\n  //   primary: \"#011936\",\n  //   primary100: \"rgba(19,21,21, 0.5)\",\n  //   secondary: \"#F4FFFD\",\n  //   warning: \"#F9DC5C\",\n  //   danger: \"#ED254E\",\n  //   neutral: \"#011936\",\n  //   error100: \"#F7A1B2\",\n  //   error500: \"#EB1E47\",\n  //   light: \"#ffffbf\",\n  //   transparent: \"rgba(0, 0, 0, 0)\",\n  //   disabled: \"#EBEBE4\",\n  // },\n  // light: {\n  //   primary: \"#131515\",\n  //   primary100: \"rgba(19,21,21, 0.5)\",\n  //   secondary: \"#2B2C28\",\n  //   warning: \"#FF8811\",\n  //   danger: \"#DA2C38\",\n  //   neutral: \"#FFFAFB\",\n  //   error100: \"#fcdcbf\",\n  //   error500: \"#f37c13\",\n  //   light: \"#ffffbf\",\n  //   transparent: \"rgba(0, 0, 0, 0)\",\n  //   disabled: \"#EBEBE4\",\n  // },\n};\n\n// export const Colors = {\n//   primary: \"#131515\",\n//   primary100: \"rgba(19,21,21, 0.5)\",\n//   secondary: \"#2B2C28\",\n//   warning: \"#FF8811\",\n//   danger: \"#DA2C38\",\n//   neutral: \"#FFFAFB\",\n//   error100: \"#fcdcbf\",\n//   error500: \"#f37c13\",\n//   light: \"#ffffbf\",\n//   transparent: \"rgba(0, 0, 0, 0)\",\n//   disabled: \"#EBEBE4\",\n// };\n\n// export const Colors = {\n//   primary: \"#CD5D67\",\n//   primary100: \"rgba(19,21,21, 0.5)\",\n//   secondary: \"#FFEEF2\",\n//   warning: \"#FF8811\",\n//   danger: \"#DA2C38\",\n//   neutral: \"#84A59D\",\n//   error100: \"#fcdcbf\",\n//   error500: \"#f37c13\",\n//   light: \"#ffffbf\",\n//   transparent: \"rgba(0, 0, 0, 0)\",\n//   disabled: \"#EBEBE4\",\n// };\n","const CLIENT_ID_DEVELOPMENT = \"1ViWd4hMouNkls6eBfzA81U_9unx-xX6qIB_40yq7lg\"\nconst CLIENT_ID_PRODUCTION = \"XktIcTQzrWVW47ysq-d6h4Tg1NgAB8TFTvAadr8WSgk\"\nexport const CLIENT_ID = process.env.NODE_ENV === 'development' ? CLIENT_ID_DEVELOPMENT : CLIENT_ID_PRODUCTION\n\nconst BASE_URL_DEVELOPMENT = \"http://192.168.1.36:3000/\"\nconst BASE_URL_PRODUCTION = \"https://smart-home-dec.herokuapp.com/\"\nexport const BASE_URL = process.env.NODE_ENV === 'development' ? BASE_URL_DEVELOPMENT : BASE_URL_PRODUCTION\n\nconst WEBSOCKET_ENDPOINT_DEVELOPMENT = \"ws://192.168.1.36:3000/cable/\"\nconst WEBSOCKET_ENDPOINT_PRODUCTION = \"wss://smart-home-dec.herokuapp.com/cable/\"\nexport const WEBSOCKET_ENDPOINT = process.env.NODE_ENV === 'development' ? WEBSOCKET_ENDPOINT_DEVELOPMENT : WEBSOCKET_ENDPOINT_PRODUCTION","import { BASE_URL, CLIENT_ID } from \"../../constants/api\";\n\nexport type AuthStateData = {\n  username: string;\n  token: string;\n  tokenType: string;\n  refreshToken: string;\n  createdAt: number;\n  expiresIn: number;\n  isLoading: boolean;\n};\n\nexport type AuthResponseData = {\n  username: string;\n  access_token: string;\n  token_type: string;\n  refresh_token: string;\n  created_at: number;\n  expires_in: number;\n};\nexport type PasswordCredentials = { username: string; password: string };\nexport type RefreshTokenCredentials = {\n  refreshToken: string;\n  username: string;\n};\n\nexport const loginWithPassword = async (credentials: PasswordCredentials) => {\n  return sendAuthRequest(credentials);\n};\n\nexport const loginWithRefreshToken = async (\n  credentials: RefreshTokenCredentials\n) => {\n  return sendAuthRequest(\n    {\n      refresh_token: credentials.refreshToken,\n      username: credentials.username,\n    },\n    \"refresh_token\"\n  );\n};\n\n// export const signupWithPassword = async (credentials: PasswordCredentials) => {\n//   return sendAuthRequest(credentials, false);\n// };\n\nexport const isAuthenticated = (authData: AuthStateData) => {\n  return authData.token && authData.createdAt + authData.expiresIn > Date.now();\n};\n\nconst responseDataToAuthData = (data: AuthResponseData) =>\n  ({\n    username: data.username,\n    token: data.access_token,\n    tokenType: data.token_type,\n    refreshToken: data.refresh_token,\n    expiresIn: data.expires_in * 1000,\n    createdAt: (data.created_at + 2 * 60 * 60) * 1000,\n  } as AuthStateData);\n\nconst sendAuthRequest = async (\n  credentials:\n    | PasswordCredentials\n    | { refresh_token: string; username: string },\n  // isLogin: boolean,\n  grantType?: string\n) => {\n  const URL = BASE_URL + \"oauth/token\"; //(isLogin ? \"oauth/token\" : \"users\");\n  const response = await fetch(URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      ...credentials,\n      client_id: CLIENT_ID,\n      grant_type: grantType || \"password\",\n    }),\n  });\n\n  if (!response.ok) {\n    const errorResponseData = await response.json();\n    console.log(errorResponseData);\n    throw new Error(\"Something went wrong, response not ok\");\n  }\n\n  const data = await response.json();\n  const authData = responseDataToAuthData({\n    ...data, //...(isLogin ? data : data.user),\n    username: credentials.username,\n  });\n  return authData;\n};\n","import * as SecureStore from \"expo-secure-store\";\nimport { AuthStateData } from \"../../services/auth/authApi\";\nimport { Platform } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { initialState as emptyState } from \"@store/slices/auth\";\n\nexport const getAuthDataFromSecureAsync = async () => {\n  const storeMethod =\n    Platform.OS === \"web\" ? AsyncStorage.getItem : SecureStore.getItemAsync;\n\n  try {\n    const storedValue = await storeMethod(\"authData\");\n    console.log(storedValue);\n    if (storedValue !== null) {\n      const AuthData = JSON.parse(storedValue);\n      return AuthData as AuthStateData;\n    }\n  } catch (err: any) {\n    console.log(err);\n  }\n\n  return null;\n};\n\nexport const storeAuthDataToSecureAsync = async (authData: AuthStateData | null) => {\n  const storeMethod =\n    Platform.OS === \"web\" ? AsyncStorage.setItem : SecureStore.setItemAsync;\n\n  const stringValue = JSON.stringify(authData);\n  try {\n    await storeMethod(\"authData\", stringValue);\n  } catch (err: any) {\n    return false;\n  }\n  return true;\n};","import { AuthData } from \"@components/auth/AuthForm\";\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Alert, AppState } from \"react-native\";\nimport { AppDispatch, RootState } from \"..\";\nimport {\n  AuthStateData,\n  isAuthenticated,\n  loginWithPassword,\n  loginWithRefreshToken,\n  PasswordCredentials,\n  RefreshTokenCredentials,\n} from \"../../services/auth/authApi\";\nimport {\n  getAuthDataFromSecureAsync,\n  storeAuthDataToSecureAsync,\n} from \"../../services/auth/localAuth\";\n\n// export const checkLoginData = createAsyncThunk<\n//   AuthStateData | undefined,\n//   boolean,\n//   { dispatch: AppDispatch }\n// >(`ac/checkLoginData`, async (tr = true, thunkApi) => {\n//   try {\n//     const savedAuthData = await getAuthDataFromSecureAsync();\n\n//     if (savedAuthData && isAuthenticated(savedAuthData)) {\n//       return savedAuthData;\n//     } else if (savedAuthData?.refreshToken) {\n//       thunkApi.dispatch(\n//         refreshToken({\n//           refresh_token: savedAuthData.refreshToken,\n//           username: savedAuthData.username,\n//         })\n//       );\n//     }\n//   } catch (err: any) {\n//     console.log(err);\n//     throw new Error(err.message);\n//   }\n//   // TODO correction needs to be done on the server as well if you changed the AC's state from the original remote\n//   // console.log(`${action} in the state`);\n// });\n\nexport const login = createAsyncThunk(\n  \"auth/login\",\n  async (credentials: PasswordCredentials) => {\n    try {\n      const authData = await loginWithPassword(credentials);\n      storeAuthDataToSecureAsync(authData);\n\n      return authData;\n    } catch (err: any) {\n      throw new Error(err);\n    }\n  }\n);\n\nexport const refreshToken = createAsyncThunk<\n  AuthStateData,\n  RefreshTokenCredentials | undefined,\n  { state: RootState }\n>(\n  \"auth/refreshToken\",\n  async (credentials: RefreshTokenCredentials | undefined, thunkApi) => {\n    try {\n      const credentialsFromState = thunkApi.getState().auth;\n      const authData = await loginWithRefreshToken(\n        credentials || credentialsFromState\n      );\n      storeAuthDataToSecureAsync(authData);\n\n      return authData;\n    } catch (err: any) {\n      throw new Error(err);\n    }\n  }\n);\n\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  storeAuthDataToSecureAsync(null);\n});\n\nexport const initialState: AuthStateData = {\n  username: \"\",\n  token: \"\",\n  tokenType: \"\",\n  refreshToken: \"\",\n  createdAt: 0,\n  expiresIn: 0,\n  isLoading: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAuthState(state, action: PayloadAction<AuthStateData>) {\n      state.username = action.payload.username;\n      state.token = action.payload.token;\n      state.tokenType = action.payload.tokenType;\n      state.refreshToken = action.payload.refreshToken;\n      state.createdAt = action.payload.createdAt;\n      state.expiresIn = action.payload.expiresIn;\n    },\n  },\n  extraReducers: (builder) => {\n    // Login\n    builder.addCase(login.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(login.fulfilled, (state, action) => {\n      console.log(\"login.fullfilled\");\n      state.createdAt = action.payload.createdAt;\n      state.expiresIn = action.payload.expiresIn;\n      state.token = action.payload.token;\n      state.refreshToken = action.payload.refreshToken;\n      state.tokenType = action.payload.tokenType;\n      state.isLoading = false;\n    });\n    builder.addCase(login.rejected, (state, action) => {\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // refreshToken\n    builder.addCase(refreshToken.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(refreshToken.fulfilled, (state, action) => {\n      state.createdAt = action.payload.createdAt;\n      state.expiresIn = action.payload.expiresIn;\n      state.token = action.payload.token;\n      state.refreshToken = action.payload.refreshToken;\n      state.tokenType = action.payload.tokenType;\n      state.isLoading = false;\n    });\n    builder.addCase(refreshToken.rejected, (state, action) => {\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    //Logout\n    builder.addCase(logout.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(logout.fulfilled, (state) => {\n      state.createdAt = initialState.createdAt;\n      state.expiresIn = initialState.expiresIn;\n      state.token = initialState.token;\n      state.refreshToken = initialState.refreshToken;\n      state.tokenType = initialState.tokenType;\n      state.isLoading = false;\n    });\n    builder.addCase(logout.rejected, (state, action) => {\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n    });\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setAuthState } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import Room from \"../models/Room\";\nimport Wall from \"../models/Wall\";\n\nexport const buildingData = [\n  {\n    points: [\n      [0, 0],\n      [990, 0],\n    ],\n  },\n  {\n    points: [\n      [0, 0],\n      [0, 100],\n    ],\n  },\n  {\n    points: [\n      [0, 100],\n      [270, 100],\n    ],\n  },\n  {\n    points: [\n      [270, 100],\n      [270, 260],\n    ],\n  },\n  {\n    points: [\n      [270, 260],\n      [460, 260],\n    ],\n  },\n  {\n    points: [\n      [460, 470],\n      [460, 780],\n    ],\n  },\n  {\n    points: [\n      [460, 100],\n      [460, 400],\n    ],\n  },\n  {\n    points: [\n      [370, 260],\n      [370, 520],\n    ],\n  },\n  {\n    points: [\n      [370, 520],\n      [460, 520],\n    ],\n  },\n  {\n    points: [\n      [460, 360],\n      [490, 360],\n    ],\n  },\n  {\n    points: [\n      [550, 360],\n      [910, 360],\n    ],\n  },\n  {\n    points: [\n      [970, 360],\n      [990, 360],\n    ],\n  },\n  {\n    points: [\n      [990, 0],\n      [990, 780],\n    ],\n  },\n  {\n    points: [\n      [460, 520],\n      [490, 520],\n    ],\n  },\n  {\n    points: [\n      [550, 520],\n      [830, 520],\n    ],\n  },\n  {\n    points: [\n      [890, 360],\n      [890, 520],\n    ],\n  },\n  {\n    points: [\n      [870, 520],\n      [898, 520],\n    ],\n  },\n  {\n    points: [\n      [650, 520],\n      [650, 780],\n    ],\n  },\n  {\n    points: [\n      [460, 780],\n      [998, 780],\n    ],\n  },\n] as Wall[];\n\nexport const roomsData = [\n  {\n    properties: {\n      id: \"Hall 1\",\n      name: \"Hall 1\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [0, 0],\n          [0, 100],\n          [270, 0],\n          [270, 100],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Kitchen\",\n      name: \"Kitchen\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [270, 0],\n          [270, 260],\n          [460, 0],\n          [460, 260],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Living\",\n      name: \"Living\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [460, 0],\n          [460, 360],\n          [990, 0],\n          [990, 360],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Empty 1\",\n      name: \"Empty 1\",\n      isLightOn: false,\n      empty: true,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [370, 260],\n          [370, 330],\n          [460, 260],\n          [460, 330],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Bath 1\",\n      name: \"Bath 1\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [370, 330],\n          [370, 520],\n          [460, 330],\n          [460, 520],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Hall 2\",\n      name: \"Hall 2\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [460, 360],\n          [460, 520],\n          [560, 360],\n          [560, 520],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Empty 2\",\n      name: \"Empty 2\",\n      isLightOn: false,\n      empty: true,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [560, 360],\n          [560, 520],\n          [650, 360],\n          [650, 520],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Empty 3\",\n      name: \"Empty 3\",\n      isLightOn: false,\n      empty: true,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [650, 360],\n          [650, 380],\n          [890, 360],\n          [890, 380],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Bath 2\",\n      name: \"Bath 2\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [650, 380],\n          [650, 520],\n          [890, 380],\n          [890, 520],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Office\",\n      name: \"Office\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [460, 520],\n          [460, 780],\n          [650, 520],\n          [650, 780],\n        ],\n      ],\n    },\n  },\n  {\n    properties: {\n      id: \"Room\",\n      name: \"Room\",\n      isLightOn: false,\n      empty: false,\n    },\n    geometry: {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [890, 360],\n          [890, 520],\n          [990, 360],\n          [990, 520],\n        ],\n        [\n          [650, 520],\n          [650, 780],\n          [990, 520],\n          [990, 780],\n        ],\n      ],\n    },\n  },\n] as Room[];\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { roomsData } from \"../../constants/floorPlanData\";\nimport Room from \"../../models/Room\";\n\nexport const fetchData = createAsyncThunk(\"home/fetchData\", () => roomsData);\n\ntype HomeState = {\n  rooms: Room[];\n};\n\nconst initialState: HomeState = {\n  rooms: [],\n};\n\nconst homeSlice = createSlice({\n  name: \"home\",\n  initialState,\n  reducers: {\n    setState(state, action: PayloadAction<HomeState>) {\n      // for (const key in Object.keys(state)) {\n      //   state[key] = action.payload[key]\n      // }\n      state.rooms = roomsData;\n    },\n    toggleLight(state, action: PayloadAction<{ roomId: string }>) {\n      const index = state.rooms.findIndex(\n        (room: Room) => room.properties.id === action.payload.roomId\n      );\n      state.rooms[index].properties.isLightOn =\n        !state.rooms[index].properties.isLightOn;\n    },\n  },\n  extraReducers: (builder) => {\n    // FetchData\n    // builder.addCase(fetchData.pending, (state) => {\n    //   state.isLoading = true;\n    // });\n    // builder.addCase(fetchData.fulfilled, (state, action) => {\n    //   state.rooms = action.payload\n    // });\n    // builder.addCase(fetchData.rejected, (state, action) => {\n    //   ;\n    //   Alert.alert(\"There was an error\", action.error.message, [\n    //     { text: \"Close\", style: \"cancel\" },\n    //   ]);\n    // });\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setState, toggleLight } = homeSlice.actions;\n\nexport default homeSlice.reducer;\n","export type AcPower = boolean;\n\nexport type AcMode = \"auto\" | \"heat\" | \"cool\" | \"dry\" | \"fan\";\nexport const acModes: AcMode[] = [\"auto\", \"heat\", \"cool\", \"dry\", \"fan\"];\n\nexport type AcFanSpeed = \"low\" | \"medium\" | \"high\" | \"auto\";\nexport const acFanSpeeds: AcFanSpeed[] = [\"low\", \"medium\", \"high\", \"auto\"];\n\nexport type AcTemperatureLimits = {\n  min: number;\n  max: number;\n};\n\nexport type AcTemperature = {\n  [key in AcMode]: number;\n};\n\nexport type AcSettings = {\n  power: AcPower;\n  mode: AcMode;\n  fanSpeed: AcFanSpeed;\n  temperatures: AcTemperature;\n};\n\nexport const acAvailableTemperature = (mode: AcMode) => {\n  let t_min: number | null;\n  let t_max: number | null;\n\n  switch (mode) {\n    case \"cool\" || \"dry\":\n      t_min = 19;\n      t_max = 30;\n      break;\n    case \"heat\":\n      t_min = 17;\n      t_max = 28;\n      break;\n    case \"auto\":\n      t_min = 17;\n      t_max = 30;\n      break;\n    case \"fan\":\n    default:\n      return null;\n  }\n\n  return {\n    min: t_min,\n    max: t_max,\n  } as AcTemperatureLimits;\n};\n","import {\n  acAvailableTemperature,\n  acFanSpeeds,\n  acModes,\n  AcSettings,\n} from \"@constants/ac_settings\";\nimport { BASE_URL } from \"@constants/api\";\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { isAuthenticated } from \"@services/auth/authApi\";\nimport { camelCaseToSnakeCaseStr } from \"@services/conversions\";\nimport { Alert } from \"react-native\";\nimport { AppDispatch, RootState } from \"..\";\nimport { refreshToken } from \"./auth\";\n\nconst createAcAsyncThunk = (action: string) =>\n  createAsyncThunk<\n    boolean,\n    boolean | undefined,\n    { state: RootState; dispatch: AppDispatch }\n  >(`ac/${action}`, async (correction: boolean | undefined, thunkApi) => {\n    let AuthorizationStr = \"\";\n    if (isAuthenticated(thunkApi.getState().auth)) {\n      AuthorizationStr = \"Bearer \" + thunkApi.getState().auth.token;\n    } else {\n      await thunkApi.dispatch(refreshToken());\n      AuthorizationStr = \"Bearer \" + thunkApi.getState().auth.token;\n    }\n\n    try {\n      const response = await fetch(\n        BASE_URL +\n          \"api/v1/\" +\n          camelCaseToSnakeCaseStr(action) +\n          `?user=${thunkApi.getState().auth.username}`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: AuthorizationStr,\n          },\n          body: JSON.stringify({\n            user: thunkApi.getState().auth.username,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"fetch failed in createAcAsyncThunk\");\n        return false;\n      }\n\n      const data = await response.json();\n      console.log(data);\n    } catch (err: any) {\n      console.log(err);\n      throw new Error(err.message);\n    }\n    // TODO correction needs to be done on the server as well if you changed the AC's state from the original remote\n    console.log(`${action} in the state`);\n    return true;\n  });\n\nexport const raiseTemperature = createAcAsyncThunk(\"raiseTemperature\");\nexport const lowerTemperature = createAcAsyncThunk(\"lowerTemperature\");\nexport const togglePower = createAcAsyncThunk(\"togglePower\");\nexport const changeFanSpeed = createAcAsyncThunk(\"changeFanSpeed\");\nexport const changeMode = createAcAsyncThunk(\"changeMode\");\n\nexport const fetchAcState = createAsyncThunk<AcSettings, boolean | undefined>(\n  `ac/fetchAcState`,\n  async () => {\n    try {\n      const response = await fetch(BASE_URL + \"api/v1/ac\");\n\n      if (!response.ok) {\n        throw new Error(\"ERROR: Getting the ac state from server failed\");\n      }\n      const data = await response.json();\n\n      return data as AcSettings;\n    } catch (err: any) {\n      throw new Error(err.message);\n    }\n  }\n);\n\ntype AcState = {\n  isLoading: boolean;\n  correctionMode: boolean;\n  settings: AcSettings;\n};\n\nconst initialState: AcState = {\n  isLoading: true,\n  correctionMode: false,\n  settings: {\n    power: false,\n    mode: \"cool\",\n    temperatures: {\n      cool: 21,\n      dry: 21,\n      heat: 28,\n      auto: 22,\n      fan: 0,\n    },\n    fanSpeed: \"low\",\n  },\n};\n\nconst acSlice = createSlice({\n  name: \"ac\",\n  initialState,\n  reducers: {\n    toggleCorrectionMode(state: AcState) {\n      state.correctionMode = !state.correctionMode;\n    },\n    setAcState(state: AcState, action: PayloadAction<AcSettings>) {\n      const data = action.payload;\n\n      state.settings.power = data.power;\n      state.settings.mode = data.mode;\n      state.settings.fanSpeed = data.fanSpeed;\n      state.settings.temperatures = data.temperatures;\n    },\n  },\n  extraReducers: (builder) => {\n    // fetchAcState\n    builder.addCase(fetchAcState.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchAcState.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.settings.mode = action.payload.mode;\n        state.settings.fanSpeed = action.payload.fanSpeed;\n        state.settings.power = action.payload.power;\n        state.settings.temperatures = action.payload.temperatures;\n      }\n      state.isLoading = false;\n    });\n    builder.addCase(fetchAcState.rejected, (state, action) => {\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // togglePower\n    builder.addCase(togglePower.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(togglePower.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.settings.power = !state.settings.power;\n      }\n      state.isLoading = false;\n    });\n    builder.addCase(togglePower.rejected, (state, action) => {\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // raiseTemperature\n    builder.addCase(raiseTemperature.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(raiseTemperature.fulfilled, (state, action) => {\n      const tempLimit = acAvailableTemperature(state.settings.mode)?.max;\n      const temp = state.settings.temperatures[state.settings.mode];\n\n      if (action.payload && tempLimit && temp && temp < tempLimit) {\n        state.settings.temperatures[state.settings.mode] += 1;\n      }\n      state.isLoading = false;\n    });\n    builder.addCase(raiseTemperature.rejected, (state, action) => {\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // lowerTemperature\n    builder.addCase(lowerTemperature.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(lowerTemperature.fulfilled, (state, action) => {\n      const tempLimit = acAvailableTemperature(state.settings.mode)?.min;\n      const temp = state.settings.temperatures[state.settings.mode];\n\n      if (action.payload && tempLimit && temp && temp > tempLimit) {\n        state.settings.temperatures[state.settings.mode] -= 1;\n      }\n      state.isLoading = false;\n    });\n    builder.addCase(lowerTemperature.rejected, (state, action) => {\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // changeFanSpeed\n    builder.addCase(changeFanSpeed.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(changeFanSpeed.fulfilled, (state, action) => {\n      const index = acFanSpeeds.findIndex(\n        (value) => value === state.settings.fanSpeed\n      );\n      if (action.payload) {\n        state.settings.fanSpeed = acFanSpeeds[(index + 1) % acFanSpeeds.length];\n      }\n      state.isLoading = false;\n    });\n    builder.addCase(changeFanSpeed.rejected, (state, action) => {\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n\n    // changeMode\n    builder.addCase(changeMode.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(changeMode.fulfilled, (state, action) => {\n      const index = acModes.findIndex((value) => value === state.settings.mode);\n      if (action.payload) {\n        state.settings.mode = acModes[(index + 1) % acModes.length];\n      }\n      state.isLoading = false;\n    });\n    builder.addCase(changeMode.rejected, (state, action) => {\n      Alert.alert(\"There was an error\", action.error.message, [\n        { text: \"Close\", style: \"cancel\" },\n      ]);\n      state.isLoading = false;\n    });\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { toggleCorrectionMode, setAcState } = acSlice.actions;\n\nexport default acSlice.reducer;\n","export const camelCaseToSnakeCaseStr = (str: string) => {\n  return str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`);\n};","import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./slices/auth\";\nimport homeReducer from \"./slices/home\";\nimport acReducer from \"./slices/ac\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    home: homeReducer,\n    ac: acReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport {\n  ActivityIndicator,\n  Pressable,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\n\nimport { Colors } from \"../../constants/styles\";\n\ntype Props = {\n  onPress: () => void;\n  isLoading?: boolean;\n  margin?: number;\n  disabled?: boolean;\n  children?: any;\n};\n\nconst Button: React.FC<Props> = ({\n  onPress,\n  isLoading,\n  disabled,\n  children,\n  margin,\n}) => {\n  const buttonStyles = { ...styles.button, margin: margin };\n  return (\n    <Pressable\n      style={({ pressed }) => [buttonStyles, pressed && styles.pressed]}\n      onPress={onPress}\n      disabled={!!isLoading}\n    >\n      <View>\n        {isLoading ? (\n          <ActivityIndicator size={\"small\"} color={Colors.secondary} />\n        ) : (\n          <Text style={styles.buttonText}>{children}</Text>\n        )}\n      </View>\n    </Pressable>\n  );\n};\n\nexport default Button;\n\nconst styles = StyleSheet.create({\n  button: {\n    borderRadius: 6,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: Colors.primary,\n    elevation: 2,\n    shadowColor: \"black\",\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  pressed: {\n    opacity: 0.7,\n  },\n  buttonText: {\n    textAlign: \"center\",\n    color: Colors.secondary,\n    fontSize: 16,\n    fontWeight: \"500\",\n  },\n});\n","import {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  TextInputProps,\n} from \"react-native\";\n\nimport { Colors } from \"../../constants/styles\";\n\ntype Type = React.FC<\n  TextInputProps & {\n    label: string;\n    secure?: boolean;\n    onUpdateValue: (value: string) => void;\n    isInvalid: boolean;\n  }\n>;\n\nconst Input: Type = (props) => {\n  const { label, keyboardType, secure, onUpdateValue, value, isInvalid } =\n    props;\n  return (\n    <View style={styles.inputContainer}>\n      <Text style={[styles.label, isInvalid && styles.labelInvalid]}>\n        {label}\n      </Text>\n      <TextInput\n        style={[styles.input, isInvalid && styles.inputInvalid]}\n        autoCapitalize=\"none\"\n        keyboardType={keyboardType}\n        secureTextEntry={secure}\n        onChangeText={onUpdateValue}\n        value={value}\n        {...props}\n      />\n    </View>\n  );\n};\n\nexport default Input;\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    marginVertical: 8,\n    borderBottomColor: Colors.primary,\n    borderBottomWidth: 1,\n  },\n  label: {\n    color: Colors.primary,\n    marginBottom: 4,\n  },\n  labelInvalid: {\n    color: Colors.error500,\n  },\n  input: {\n    paddingVertical: 8,\n    paddingHorizontal: 6,\n    backgroundColor: Colors.secondary,\n    borderRadius: 4,\n    fontSize: 16,\n  },\n  inputInvalid: {\n    backgroundColor: Colors.error100,\n  },\n});\n","import { useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store\";\n// import { useSelector } from \"react-redux\";\n// import { RootState } from \"../../store\";\n\nimport Button from \"../UI/Button\";\nimport Input from \"./Input\";\n\nexport type AuthData = {\n  username: string;\n  password: string;\n};\n\ntype AuthDataValidity = {\n  username: boolean;\n  password: boolean;\n};\n\ntype AuthFormProps = React.FC<{\n  isLogin?: boolean;\n  onSubmit: (props: AuthData) => void;\n  credentialsInvalid: AuthDataValidity;\n}>;\n\nconst AuthForm: AuthFormProps = ({ isLogin, onSubmit, credentialsInvalid }) => {\n  const [credentials, setCredentials] = useState({\n    username: \"User1\",\n    password: \"admin123@\",\n  });\n\n  const isLoading = useSelector((state: RootState) => state.auth.isLoading)\n\n  const { username: usernameIsInvalid, password: passwordIsInvalid } =\n    credentialsInvalid;\n\n  const updateInputValueHandler = (inputType: string, enteredValue: string) => {\n    setCredentials((credentials) => ({\n      ...credentials,\n      [inputType]: enteredValue,\n    }));\n  };\n\n  const submitHandler = async () => {\n    try {\n      // setIsLoading(true)\n      onSubmit({\n        username: credentials.username,\n        password: credentials.password,\n      }); \n      // setIsLoading(false)\n    } catch (err: any) {\n      console.log(err)\n      // setIsLoading(false)\n      throw new Error(err)\n    }\n  };\n\n  return (\n    <View style={styles.form}>\n      <View>\n        <Input\n          label=\"Username\"\n          onUpdateValue={(value) => updateInputValueHandler(\"username\", value)}\n          value={credentials.username}\n          isInvalid={usernameIsInvalid}\n        />\n        <Input\n          label=\"Password\"\n          onUpdateValue={(value) => updateInputValueHandler(\"password\", value)}\n          secure\n          value={credentials.password}\n          isInvalid={passwordIsInvalid}\n        />\n        <View style={styles.buttons}>\n          <Button onPress={submitHandler} isLoading={isLoading}>\n            {isLogin ? \"Log In\" : \"Sign Up\"}\n          </Button>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default AuthForm;\n\nconst styles = StyleSheet.create({\n  form: {},\n  buttons: {\n    marginTop: 12,\n  },\n});\n","import { useState } from \"react\";\nimport { Alert, StyleSheet, View } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport FlatButton from \"../UI/FlatButton\";\nimport AuthForm, { AuthData } from \"./AuthForm\";\nimport { Colors } from \"../../constants/styles\";\nimport { PasswordCredentials } from \"../../services/auth/authApi\";\n\ntype AuthContentProps = {\n  isLogin?: boolean;\n  onAuthenticate: (authData: PasswordCredentials) => void;\n};\n\nconst AuthContent: React.FC<AuthContentProps> = (props) => {\n  const { isLogin, onAuthenticate } = props;\n  const { navigate } = useNavigation();\n  const [credentialsInvalid, setCredentialsInvalid] = useState({\n    username: false,\n    password: false,\n  });\n\n  // const handleAuthModeSwitch = () => {\n  //   navigate(isLogin ? \"Signup\" : \"Login\");\n  // };\n\n  const handleSubmit = (credentials: AuthData) => {\n    let { username, password } = credentials;\n\n    username = username.trim();\n    password = password.trim();\n\n    const usernameIsValid = username.length >= 3;\n    const passwordIsValid = password.length > 6;\n\n    if (!usernameIsValid || !passwordIsValid) {\n      Alert.alert(\"Invalid input\", \"Please check your entered credentials.\");\n      setCredentialsInvalid({\n        username: !usernameIsValid,\n        password: !passwordIsValid,\n      });\n      return;\n    }\n    onAuthenticate({ username, password });\n  };\n\n  return (\n    <View style={styles.authContent}>\n      <AuthForm\n        isLogin={isLogin}\n        onSubmit={handleSubmit}\n        credentialsInvalid={credentialsInvalid}\n      />\n      {/* <View style={styles.buttons}>\n        <FlatButton onPress={handleAuthModeSwitch}>\n          {isLogin\n            ? \"Don't have an account? Sign up\"\n            : \"Already have an account? Log in\"}\n        </FlatButton>\n      </View> */}\n    </View>\n  );\n};\n\nexport default AuthContent;\n\nconst styles = StyleSheet.create({\n  authContent: {\n    marginTop: 64,\n    marginHorizontal: 32,\n    padding: 16,\n    borderRadius: 8,\n    backgroundColor: Colors.secondary,\n    elevation: 2,\n    shadowColor: \"black\",\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.35,\n    shadowRadius: 4,\n  },\n  buttons: {\n    marginTop: 8,\n  },\n});\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport AuthContent from \"@components/auth/AuthContent\";\nimport { AppDispatch } from \"@store\";\nimport { login } from \"@store/slices/auth\";\nimport { RootStackParamList } from \"../types\";\nimport { PasswordCredentials } from \"@services/Auth/authApi\";\n\n\ntype Props = NativeStackScreenProps<RootStackParamList, \"Login\">;\n\nconst LoginScreen: React.FC<Props> = (props) => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const handleLogin = async (credentials: PasswordCredentials) => {\n    try {\n      dispatch(login(credentials))\n    } catch (err: any) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <AuthContent\n      isLogin\n      onAuthenticate={handleLogin}\n    />\n  );\n};\n\nexport default LoginScreen;\n","import React from \"react\";\nimport {\n  ActivityIndicator,\n  Pressable,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\"\n\nimport { Colors } from \"../../constants/styles\";\n\ntype Props = {\n  onPress: () => void;\n  isLoading?: boolean;\n  disabled?: boolean;\n  children?: any;\n};\n\nconst ProfileButton: React.FC<Props> = ({ onPress, isLoading, disabled, children }) => {\n  return (\n    <Pressable\n      style={({ pressed }) => [styles.button, pressed && styles.pressed]}\n      onPress={onPress}\n      disabled={isLoading || disabled}\n    >\n      <AntDesign name=\"user\" size={24} color={Colors.neutral} />\n    </Pressable>\n  );\n};\n\nexport default ProfileButton;\n\nconst styles = StyleSheet.create({\n  button: {\n    borderRadius: 12,\n    borderColor: Colors.neutral,\n    borderWidth: 1,\n    // paddingVertical: 6,\n    // paddingHorizontal: 12,\n    // backgroundColor: Colors.primary500,\n    elevation: 2,\n    shadowColor: \"black\",\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  pressed: {\n    opacity: 0.7,\n  },\n  buttonText: {\n    textAlign: \"center\",\n    color: Colors.neutral,\n    fontSize: 16,\n    fontWeight: \"bold\",\n  },\n});\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { Colors } from \"../../../constants/styles\";\nimport Wall from \"../../../models/Wall\";\n\nconst lineWidth = 4;\n\nconst Line: React.FC<{ points: Wall[\"points\"] }> = (props) => {\n  const { points } = props;\n  const isHorizontal =\n    points[0][0] === points[1][0] && points[0][1] !== points[1][1];\n  const width = isHorizontal\n    ? points[1][1] - points[0][1] + lineWidth / 2\n    : lineWidth;\n  const height = isHorizontal\n    ? lineWidth\n    : points[1][0] - points[0][0] + lineWidth / 2;\n\n  const styles = stylesGenerator(points, width, height);\n\n  return <View style={styles.component} />;\n};\n\nconst stylesGenerator = (\n  points: Wall[\"points\"],\n  width: number,\n  height: number\n) =>\n  StyleSheet.create({\n    component: {\n      position: \"absolute\",\n      top: points[0][0] - lineWidth / 2,\n      start: points[0][1] - lineWidth / 2,\n      width: width,\n      height: height,\n      backgroundColor: Colors.neutral,\n    },\n  });\n\nexport default Line;\n","import Room from \"@models/Room\";\nimport Wall from \"@models/Wall\";\n\nconst maxXY = (coordinates: Room[]) => {\n  let maxX = 0;\n  let maxY = 0;\n  coordinates.forEach((polygon) =>\n    polygon.geometry.coordinates.forEach((point) =>\n      point.forEach((value) => {\n        if (maxX < value[0]) {\n          maxX = value[0];\n        }\n        if (maxY < value[1]) {\n          maxY = value[1];\n        }\n      })\n    )\n  );\n  return { maxX: maxX, maxY: maxY };\n};\n\nexport const traslateRoomCoordinatesToScale = (scale: number, coordinates: Room[]) => {\n  const { maxX, maxY } = maxXY(coordinates);\n\n  return coordinates.map((room) => {\n    const room_coordinates = room.geometry.coordinates.map((polygon) => {\n      const polygon_coordinates = polygon.map(\n        (value, index) =>\n          [\n            (value[0] - maxX / 2) / scale + index * 1,\n            (value[1] - maxY / 2) / scale + index * 1,\n          ] as [number, number]\n      );\n      return polygon_coordinates;\n    });\n    return {\n      ...room,\n      geometry: { type: room.geometry.type, coordinates: room_coordinates },\n    };\n  }) as Room[];\n};\n\nexport const traslateBuildingCoordinatesScale = (\n  scale: number,\n  walls: Wall[],\n  rooms: Room[]\n) => {\n  const { maxX, maxY } = maxXY(rooms);\n\n\n  return walls.map((wall, index) => {\n    const wall_points = wall.points.map((point) => [\n      (point[0] - maxX / 2) / scale + index * 0,\n      (point[1] - maxY / 2) / scale + index * 0,\n    ]) as Wall[\"points\"];\n    return { points: wall_points } as Wall;\n  });\n};\n\nexport const roomsCoordinates = (roomsData: Room[], scale: number) =>\n  traslateRoomCoordinatesToScale(2.1, roomsData);\n\nexport const builduingCoordinates = (walls: Wall[], roomsData: Room[], scale: number) =>\n  traslateBuildingCoordinatesScale(scale, walls, roomsData);\n","import { buildingData, roomsData } from \"@constants/floorPlanData\";\nimport React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport Line from \"./Line\";\nimport { builduingCoordinates } from \"./MapHelpers\";\n\nconst scale = 2.1\n\nconst Building: React.FC<{}> = (props) => {\n  return (\n    <>\n      {builduingCoordinates(buildingData, roomsData, scale).map((wall) => (\n        <Line\n          points={wall.points}\n          key={`${wall.points[0][0]}${wall.points[0][1]}${wall.points[1][0]}${wall.points[1][1]}`}\n        />\n      ))}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {},\n});\n\nexport default Building;\n","import React, { useState } from \"react\";\nimport { Text, StyleSheet, Pressable, View } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Colors } from \"@constants/styles\";\nimport Room from \"@models/Room\";\nimport { RootState } from \"@store\";\nimport { toggleLight } from \"@store/slices/home\";\n\nconst createPolygonPosition = (points: [number, number][]) => {\n  const style = StyleSheet.create({\n    polygon: {\n      position: \"absolute\",\n      top: points[0][0],\n      start: points[0][1],\n    },\n  });\n\n  return style.polygon;\n};\n\nconst createPolygonSize = (points: [number, number][]) => {\n  let height = Math.abs(points[0][0] - points[2][0]);\n  let width = Math.abs(points[0][1] - points[1][1]);\n\n  const style = StyleSheet.create({\n    polygon: {\n      width: width,\n      height: height,\n    },\n  });\n\n  return style.polygon;\n};\n\nconst RoomContainer: React.FC<{\n  coordinates: [number, number][];\n  properties: { id: string; name: string; empty: boolean };\n}> = (props) => {\n  const dispatch = useDispatch();\n  const { coordinates, properties } = props;\n\n  const isLightOn = useSelector(\n    (state: RootState) =>\n      !!state.home.rooms.find(\n        (room: Room) => room.properties.id === properties.id\n      )?.properties.isLightOn\n  );\n\n  let backgroundColor = isLightOn ? Colors.light : undefined;\n  backgroundColor = properties.empty ? Colors.neutral : backgroundColor;\n\n  return (\n    <Pressable\n      onPress={() => {\n        if (!properties.empty) {\n          dispatch(toggleLight({ roomId: properties.id }));\n        }\n      }}\n      style={createPolygonPosition(coordinates)}\n    >\n      <View\n        style={{\n          ...createPolygonSize(coordinates),\n          ...styles.component,\n          backgroundColor: backgroundColor,\n        }}\n      >\n        <Text\n          style={{\n            ...styles.label,\n            color: isLightOn ? Colors.primary : Colors.neutral,\n          }}\n        >\n          {properties.name}\n        </Text>\n      </View>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    // borderColor: Colors.neutral,\n    // borderWidth: 2,\n\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  label: {\n    color: Colors.neutral,\n    fontSize: 8,\n  },\n});\n\nexport default RoomContainer;\n","import { roomsData } from \"@constants/floorPlanData\";\nimport React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { roomsCoordinates } from \"./MapHelpers\";\nimport RoomContainer from \"./RoomContainer\";\n\nconst scale = 2.1\n\nconst Rooms: React.FC<{}> = (props) => {\n  return (\n    <>\n      {roomsCoordinates(roomsData, scale).map((roomData) =>\n        roomData.geometry.coordinates.map((polygon, index) => (\n          <RoomContainer\n            coordinates={polygon}\n            properties={roomData.properties}\n            key={roomData.properties.name + index}\n          />\n        ))\n      )}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {},\n});\n\nexport default Rooms;\n","import React from \"react\";\nimport { Image, Pressable, StyleSheet, View } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ReactNativeZoomableView } from \"@openspacelabs/react-native-zoomable-view\";\nimport Navigation from \"@navigation/Navigation\";\nimport Button from \"@components/UI/Button\";\nimport Map from \"./Map\";\nimport Building from \"./Building\";\nimport Rooms from \"./Rooms\";\nimport { Props as HomeScreenNavigationProps } from \"../../../screens/HomeScreen\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { RootStackParamList } from \"../../../screens/types\";\n\ntype NavProps = NativeStackNavigationProp<\n  RootStackParamList,\n  \"Home\",\n  undefined\n>;\n\nconst FloorPlan: React.FC<{}> = (props) => {\n  const { navigate } = useNavigation<NavProps>();\n\n  // <ReactNativeZoomableView\n  //   zoomEnabled={true}\n  //   maxZoom={5}\n  //   minZoom={0.1}\n  //   zoomStep={0.25}\n  //   initialZoom={1}\n  //   bindToBorders={true}\n  //   style={styles.component}\n  // >\n  return (\n    <View style={styles.component}>\n      <Pressable\n        onPress={() => navigate(\"AcRemote\")}\n        style={styles.imageContainer}\n      >\n        <Image\n          source={require(\"../../../assets/icons/air-conditioner-colored.png\")}\n          style={styles.image}\n        />\n      </Pressable>\n      <View>\n        <Rooms />\n        <Building />\n      </View>\n    </View>\n  );\n  // </ReactNativeZoomableView>\n};\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  imageContainer: {\n    position: \"absolute\",\n    end: \"10%\",\n    top: \"10%\",\n    height: 150,\n    width: 150,\n  },\n  image: {\n    height: 150,\n    width: 150,\n  },\n});\n\nexport default FloorPlan;\n","import React, { useLayoutEffect } from \"react\";\nimport { View, Text, StyleSheet, Image, Pressable } from \"react-native\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\n\nimport { RootStackParamList } from \"./types\";\nimport { logout } from \"../store/slices/auth\";\nimport Button from \"../components/UI/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../store\";\nimport ProfileButton from \"../components/user/ProfileButton\";\nimport FloorPlan from \"../components/Home/FloorPlan/FloorPlan\";\nimport { Colors } from \"../constants/styles\";\n\nexport type Props = NativeStackScreenProps<RootStackParamList, \"Home\">;\n\nconst HomeScreen: React.FC<Props> = (props) => {\n  const { navigation } = props;\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <ProfileButton onPress={() => navigation.navigate(\"Profile\")} />\n      ),\n    });\n  }, [navigation]);\n\n  return (\n    <View style={styles.rootContainer}>\n      \n      <FloorPlan />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  rootContainer: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 8,\n  },\n  imageContainer: {\n    height: 50,\n    width: 50,\n    backgroundColor: \"pink\",\n  },\n  image: {\n    height: 50,\n    width: 50,\n  },\n});\n\nexport default HomeScreen;\n","import React from 'react'\nimport { View, Text, StyleSheet } from 'react-native'\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from './types'\nimport { useDispatch } from 'react-redux';\nimport Button from '../components/UI/Button';\nimport { logout } from '../store/slices/auth';\nimport { AppDispatch } from '../store';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'Profile'>;\n\nconst ProfileScreen: React.FC<Props> = (props) => {\n  const { navigation } = props\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <View style={styles.screen}>\n      <Button onPress={() => dispatch(logout())}>Logout</Button> \n    </View>\n  )\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  }\n});\n\nexport default ProfileScreen;","import React from \"react\";\nimport { Pressable, Text, StyleSheet } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"@store\";\nimport { toggleCorrectionMode } from \"@store/slices/ac\";\nimport { Colors } from \"@constants/styles\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst CorrectionModeButton: React.FC<{}> = (props) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const handlePress = () => dispatch(toggleCorrectionMode());\n  const isCorrectionMode = useSelector((state: RootState) => state.ac.correctionMode)\n\n  return (\n    <Pressable onPress={handlePress} style={styles.component}>\n      <Ionicons\n        name={isCorrectionMode ? \"ios-settings\" : \"ios-settings-outline\"}\n        size={24}\n        color={Colors.secondary}\n      />\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    paddingHorizontal: 11,\n  },\n});\n\nexport default CorrectionModeButton;\n","import React from \"react\";\nimport { View, Pressable, StyleSheet } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"@store\";\nimport { Colors } from \"@constants/styles\";\nimport { AsyncThunk } from \"@reduxjs/toolkit\";\n\nconst RemoteBaseButton: React.FC<{\n  children?: any;\n  dispatchAction: AsyncThunk<void, boolean | undefined, {}>;\n  empty?: boolean;\n}> = (props) => {\n  const { children, dispatchAction, empty } = props;\n  const dispatch = useDispatch<AppDispatch>();\n  const isCorrectionMode = useSelector(\n    (state: RootState) => state.ac.correctionMode\n  );\n\n  const isLoading = useSelector(\n    (state: RootState) => state.ac.isLoading\n  );\n\n  const handlePress = () => {\n    if (!isLoading){\n      dispatch(dispatchAction(isCorrectionMode));\n    }\n  };\n\n  const handleLongPress = () => {\n    dispatch(dispatchAction(true));\n  };\n\n  return (\n    <Pressable\n      onPress={handlePress}\n      onLongPress={handleLongPress}\n      style={componentStyle(empty)}\n    >\n      {children}\n    </Pressable>\n  );\n};\n\nconst componentStyle = (isEmpty: boolean | undefined) => {\n  const stl = StyleSheet.create({\n    component: {\n      width: 112,\n      height: 64,\n      borderRadius: 8,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: isEmpty ? Colors.transparent : Colors.secondary,\n      outlineStyle: \"none\",\n      shadowRadius: 8,\n      shadowOpacity: isEmpty ? 0 : 0.4,\n      shadowOffset: { height: 4, width: 0 },\n      elevation: isEmpty ? 0 : 1,\n    },\n  });\n\n  return stl.component;\n};\n\nexport default RemoteBaseButton;\n","import React from \"react\";\nimport { changeFanSpeed } from \"@store/slices/ac\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { Colors } from \"@constants/styles\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { SlideInRight, SlideOutRight } from \"react-native-reanimated\";\n\nconst FanSpeedButton: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  return (\n    <RemoteBaseButton\n      dispatchAction={changeFanSpeed}\n      empty={!isOn}\n    >\n      <FontAwesome5 name=\"fan\" size={48} color={Colors.neutral} />\n    </RemoteBaseButton>\n  );\n};\n\nexport default FanSpeedButton;\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesome5, Ionicons, MaterialIcons } from \"@expo/vector-icons\";\nimport { RootState } from \"@store\";\nimport { changeMode } from \"@store/slices/ac\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport { Colors } from \"@constants/styles\";\n\nconst ModeButton: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  const handlePress = () => console.log(\"ModeButton\");\n  return (\n    <RemoteBaseButton\n      dispatchAction={changeMode}\n      empty={!isOn}\n    >\n      <View style={styles.mainContainer}>\n        <View style={styles.topContainer}>\n          <FontAwesome5\n            name=\"snowflake\"\n            size={18}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n          <Ionicons\n            name=\"water\"\n            size={18}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n          <FontAwesome5\n            name=\"fan\"\n            size={18}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n        </View>\n        <View style={styles.bottomContainer}>\n          <FontAwesome5\n            name=\"sun\"\n            size={18}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n          <MaterialIcons\n            name=\"brightness-auto\"\n            size={18}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n        </View>\n      </View>\n    </RemoteBaseButton>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    color: Colors.neutral,\n    fontWeight: \"bold\",\n  },\n  mainContainer: {\n    flexDirection: \"column\",\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"space-around\",\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  icon: {\n    marginHorizontal: 2,\n  },\n});\n\nexport default ModeButton;\n","import React from \"react\";\nimport { Image, StyleSheet } from \"react-native\";\nimport { togglePower } from \"@store/slices/ac\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { SlideInRight, SlideOutRight } from \"react-native-reanimated\";\n\nconst PowerButton: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  return (\n    <RemoteBaseButton dispatchAction={togglePower}>\n      {isOn ? (\n        <Image\n          source={require(\"../../../assets/icons/off.png\")}\n          style={styles.image}\n        />\n      ) : (\n        <Image\n          source={require(\"../../../assets/icons/on.png\")}\n          style={styles.image}\n        />\n      )}\n    </RemoteBaseButton>\n  );\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    height: 48,\n    width: 48,\n  },\n});\nexport default PowerButton;\n","import { Colors } from \"@constants/styles\";\nimport React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\n\nconst Arrow: React.FC<{ direction: keyof typeof styles }> = (props) => {\n  const { direction } = props;\n\n  return <View style={{ ...styles.arrow, ...styles[direction] }}></View>;\n};\n\nconst styles = StyleSheet.create({\n  arrow: {\n    width: 0,\n    height: 0,\n\n    borderStartWidth: 16,\n    borderStartColor: \"rgba(0, 0, 0, 0)\",\n\n    borderEndWidth: 16,\n    borderEndColor: \"rgba(0, 0, 0, 0)\",\n\n    borderBottomWidth: 16,\n    borderBottomColor: Colors.neutral,\n  },\n  up: {\n    transform: [{ rotate: \"0deg\" }],\n  },\n  down: {\n    transform: [{ rotate: \"180deg\" }],\n  },\n});\n\nexport default Arrow;\n","import React from \"react\";\nimport { Image, StyleSheet, View } from \"react-native\";\nimport { lowerTemperature } from \"@store/slices/ac\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport Arrow from \"./Arrow\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { SlideInLeft, SlideOutLeft } from \"react-native-reanimated\";\n\nconst TemperatureDownButton: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  const handlePress = () => console.log(\"TempDownButton\");\n\n  return (\n    <RemoteBaseButton\n      dispatchAction={lowerTemperature}\n      empty={!isOn}\n      // entering={SlideInLeft}\n      // exiting={SlideOutLeft}\n    >\n      <View style={styles.imageContainer}>\n        <Arrow direction=\"down\" />\n        <Image\n          source={require(\"../../../assets/icons/cold.png\")}\n          style={styles.image}\n        />\n      </View>\n    </RemoteBaseButton>\n  );\n};\n\nconst styles = StyleSheet.create({\n  imageContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingLeft: 12,\n  },\n  image: {\n    height: 48,\n    width: 48,\n    marginLeft: 8,\n  },\n});\n\nexport default TemperatureDownButton;\n","import React from \"react\";\nimport { Image, StyleSheet, View } from \"react-native\";\nimport { raiseTemperature } from \"@store/slices/ac\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport Arrow from \"./Arrow\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { SlideInRight, SlideOutRight } from \"react-native-reanimated\";\n\nconst TemperatureUpButton: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  const handlePress = () => console.log(\"TempUpButton\");\n\n  return (\n    <RemoteBaseButton\n      dispatchAction={raiseTemperature}\n      empty={!isOn}\n      // entering={SlideInRight}\n      // exiting={SlideOutRight}\n    >\n      <View style={styles.imageContainer}>\n        <Arrow direction=\"up\" />\n        <Image\n          source={require(\"../../../assets/icons/hot.png\")}\n          style={styles.image}\n        />\n      </View>\n    </RemoteBaseButton>\n  );\n};\n\nconst styles = StyleSheet.create({\n  imageContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingLeft: 12,\n  },\n  image: {\n    height: 48,\n    width: 48,\n    marginLeft: 8,\n  },\n});\n\nexport default TemperatureUpButton;\n","import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport FanSpeedButton from \"./FanSpeedButtton\";\nimport ModeButton from \"./ModeButton\";\nimport PowerButton from \"./PowerButton\";\nimport TemperatureDownButton from \"./TemperatureDownButton\";\nimport TemperatureUpButton from \"./TemperatureUpButton\";\nimport RemoteBaseButton from \"./RemoteBaseButton\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\n\nconst AcButtons: React.FC<{}> = (props) => {\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  return (\n    <>\n      <View style={styles.buttons}>\n        <>\n          <View style={styles.buttonsColumn}>\n            {isOn && (\n              <>\n                <TemperatureUpButton />\n                <TemperatureDownButton />\n                <ModeButton />\n              </>\n            )}\n          </View>\n          <View style={styles.buttonsColumn}>\n            <PowerButton />\n            {isOn && (\n              <>\n                <FanSpeedButton />\n                <View style={styles.emptySpace}></View>\n              </>\n            )}\n          </View>\n        </>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    height: \"55%\",\n    paddingVertical: 32,\n  },\n  powerButtonContainer: {\n    flexDirection: \"row-reverse\",\n    width: \"100%\",\n    height: \"55%\",\n  },\n  buttonsColumn: {\n    flexDirection: \"column\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  emptySpace: {\n    width: 128,\n    height: 64,\n  },\n});\n\nexport default AcButtons;\n","import React, { useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { Colors } from \"@constants/styles\";\n\nconst Temperature: React.FC<{}> = (props) => {\n  const temperature = useSelector(\n    (state: RootState) => state.ac.settings.temperatures[state.ac.settings.mode]\n  );\n  const mode = useSelector((state: RootState) => state.ac.settings.mode);\n  const [dynamicStyle, setDynamicStyle] = useState({});\n\n  useEffect(() => {\n    setDynamicStyle([\n      mode === \"fan\" ? { color: Colors.disabled } : { color: Colors.neutral },\n    ]);\n  }, [mode]);\n\n  return (\n    <View style={styles.component}>\n      <Text style={[styles.generalText, styles.temperatureText, dynamicStyle]}>\n        {mode === \"fan\" ? \"N/A\" : temperature}\n      </Text>\n      <Text style={[styles.generalText, styles.units, dynamicStyle]}>\n        {mode !== \"fan\" && \"°C\"}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n  },\n  generalText: {\n    fontWeight: \"bold\",\n  },\n  temperatureText: {\n    fontSize: 128,\n  },\n  units: {\n    fontSize: 32,\n    fontWeight: \"bold\",\n  },\n});\n\nexport default Temperature;\n","import React, { useEffect, useRef } from \"react\";\nimport { View, StyleSheet} from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport { Colors } from \"@constants/styles\";\nimport { FontAwesome5, MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nconst Fan: React.FC<{}> = (props) => {\n  const speed = useSelector((state: RootState) => state.ac.settings.fanSpeed);\n\n  // const animationValue = useRef(new Animated.Value(0)).current;\n  // const spin = animationValue.interpolate({\n  //   inputRange: [0, 1],\n  //   outputRange: [\"0deg\", \"360deg\"],\n  // });\n\n  // useEffect(() => {\n  //   animationValue.stopAnimation();\n  //   animationValue.setValue(0);\n\n  //   if (speed !== \"auto\") {\n  //     const loop = Animated.loop(\n  //       Animated.timing(animationValue, {\n  //         toValue: 1,\n  //         duration: 2000,\n  //         easing: Easing.linear,\n  //         useNativeDriver: true,\n  //       })\n  //     );\n  //     loop.start();\n  //     return () => loop.stop();\n  //   }\n  // }, [speed]);\n\n  if (speed === \"auto\") {\n    return (\n      <View style={styles.component}>\n        <MaterialCommunityIcons\n          name=\"fan-auto\"\n          size={32}\n          color={Colors.neutral}\n          style={styles.icon}\n        />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.component}>\n      <View\n        // style={{\n        //   transform: [{ rotate: spin }],\n        // }}\n      >\n        <FontAwesome5\n          name=\"fan\"\n          size={16}\n          color={Colors.neutral}\n          style={styles.icon}\n        />\n      </View>\n      {(speed === \"medium\" || speed === \"high\") && (\n        <View\n          // style={{\n          //   transform: [{ rotate: spin }],\n          // }}\n        >\n          <FontAwesome5\n            name=\"fan\"\n            size={24}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n        </View>\n      )}\n      {speed === \"high\" && (\n        <View\n          // style={{\n          //   transform: [{ rotate: spin }],\n          // }}\n        >\n          <FontAwesome5\n            name=\"fan\"\n            size={32}\n            color={Colors.neutral}\n            style={styles.icon}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    flexDirection: \"row\",\n    height: \"100%\",\n    alignItems: \"flex-end\",\n    // justifyContent: 'flex-start'\n  },\n  text: {\n    color: Colors.neutral,\n  },\n  icon: {\n    margin: 5,\n  },\n});\n\nexport default Fan;\n","import { RootState } from \"@store\";\nimport React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesome5, Ionicons, MaterialIcons } from \"@expo/vector-icons\";\nimport { Colors } from \"@constants/styles\";\n\nconst Mode: React.FC<{}> = (props) => {\n  const mode = useSelector((state: RootState) => state.ac.settings.mode);\n\n  return (\n    <View style={styles.component}>\n      {/* <Text style={styles.text}>Mode</Text> */}\n      {mode === \"cool\" && (\n        <FontAwesome5\n          name=\"snowflake\"\n          size={32}\n          color={Colors.neutral}\n          // style={styles.icon}\n        />\n      )}\n      {mode === \"dry\" && (\n        <Ionicons\n          name=\"water\"\n          size={32}\n          color={Colors.neutral}\n          // style={styles.icon}\n        />\n      )}\n      {mode === \"fan\" && (\n        <FontAwesome5\n          name=\"fan\"\n          size={32}\n          color={Colors.neutral}\n          // style={styles.icon}\n        />\n      )}\n      {mode === \"heat\" && (\n        <FontAwesome5\n          name=\"sun\"\n          size={32}\n          color={Colors.neutral}\n          // style={styles.icon}\n        />\n      )}\n      {mode === \"auto\" && (\n        <MaterialIcons\n          name=\"brightness-auto\"\n          size={32}\n          color={Colors.neutral}\n          // style={styles.icon}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  // text: {\n  //   marginBottom: 6,\n  //   color: Colors.primary100,\n  // },\n});\n\nexport default Mode;\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@store\";\nimport Temperature from \"./Temperature\";\nimport Fan from \"./Fan\";\nimport Mode from \"./Mode\";\nimport { Colors } from \"@constants/styles\";\n\nconst AcDisplay: React.FC<{}> = (props) => {\n  const state = useSelector((state: RootState) => state.ac);\n\n  return (\n    <View style={styles.component}>\n      {state.settings.power ? (\n        <>\n          <Temperature />\n          <View style={styles.bottomBar}>\n            <Fan />\n            {state.correctionMode && (\n              <Text style={styles.infoText}>CORRECTION MODE!</Text>\n            )}\n            <Mode />\n          </View>\n        </>\n      ) : (\n        <Text style={styles.offText}>Turn me on, baby!</Text>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n    width: \"100%\",\n    padding: 32,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.secondary,\n    borderRadius: 8,\n    shadowColor: \"black\",\n    shadowRadius: 8,\n    shadowOpacity: 0.4,\n    shadowOffset: { height: 4, width: 0 },\n    elevation: 1,\n  },\n  bottomBar: {\n    width: \"100%\",\n    height: 42,\n    marginTop: 32,\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n  },\n  offText: {\n    fontSize: 32,\n    color: Colors.neutral,\n  },\n  infoText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlignVertical: \"center\",\n    color: Colors.warning,\n  },\n});\n\nexport default AcDisplay;\n","import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport AcButtons from \"./Buttons\";\nimport AcDisplay from \"./Display\";\n\nconst Remote: React.FC<{}> = (props) => {\n  return (\n    <View style={styles.component}>\n      <AcDisplay />\n      <AcButtons />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n    marginHorizontal: \"6%\",\n    marginVertical: \"12%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  display: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    height: \"35%\",\n    borderWidth: 1,\n    borderColor: \"white\",\n  },\n});\n\nexport default Remote;\n","import React, { useLayoutEffect } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport Navigation from \"@navigation/Navigation\";\nimport CorrectionModeButton from \"@components/AcController/Buttons/CorrectionModeButton\";\nimport Remote from \"@components/AcController/Remote\";\nimport { AppDispatch, RootState } from \"@store\";\nimport { RootStackParamList } from \"./types\";\nimport { fetchAcState } from \"@store/slices/ac\";\n\ntype Props = NativeStackScreenProps<RootStackParamList, \"Profile\">;\n\nconst AcRemoteScreen: React.FC<Props> = (props) => {\n  const { navigation } = props;\n  const dispatch = useDispatch<AppDispatch>()\n  const isOn = useSelector((state: RootState) => state.ac.settings.power);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => isOn && <CorrectionModeButton />,\n    });\n\n    dispatch(fetchAcState())\n\n  }, [isOn, navigation]);\n  return <Remote />;\n};\n\nconst styles = StyleSheet.create({\n  component: {},\n});\n\nexport default AcRemoteScreen;\n","import { NavigationContainer, DarkTheme } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Colors } from \"../constants/styles\";\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport AcRemoteScreen from \"../screens/AcRemoteScreen\";\nimport { isAuthenticated } from \"../services/auth/authApi\";\nimport { getAuthDataFromSecureAsync } from \"../services/auth/localAuth\";\nimport { AppDispatch, RootState } from \"../store\";\nimport { refreshToken, setAuthState } from \"../store/slices/auth\";\nimport {\n  createDrawerNavigator,\n  DrawerContent,\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n  DrawerItem,\n  DrawerItemList,\n  DrawerToggleButton,\n} from \"@react-navigation/drawer\";\nimport { useEffect, useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport { hideAsync } from \"expo-splash-screen\";\nimport { WEBSOCKET_ENDPOINT } from \"@constants/api\";\nimport { setAcState } from \"@store/slices/ac\";\n\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst AuthStack = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: Colors.primary },\n        headerTintColor: Colors.neutral,\n        headerShadowVisible: false,\n        contentStyle: { backgroundColor: Colors.primary },\n      }}\n    >\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n    </Stack.Navigator>\n  );\n};\n\nconst CustomDrawerContent = (props: DrawerContentComponentProps) => {\n  return (\n    <DrawerContentScrollView>\n      {/* <DrawerItemList /> */}\n      <DrawerContent {...props} />\n      <DrawerItem\n        label=\"Logout\"\n        inactiveTintColor={Colors.danger}\n        onPress={() => console.log(\"LOGOUT\")}\n      />\n    </DrawerContentScrollView>\n  );\n};\n\nconst AuthenticatedDrawer = () => {\n  return (\n    <Drawer.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: Colors.primary,\n        },\n        headerShadowVisible: false,\n        headerTintColor: Colors.neutral,\n        drawerContentStyle: { backgroundColor: Colors.secondary },\n        sceneContainerStyle: { backgroundColor: Colors.primary },\n        headerLeft: () => <DrawerToggleButton tintColor={Colors.secondary} />,\n      }}\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\n    >\n      <Drawer.Screen name=\"Air Conditioner\" component={AcRemoteScreen} />\n      <Drawer.Screen name=\"Home\" component={HomeScreen} />\n      <Drawer.Screen name=\"Profile\" component={ProfileScreen} />\n    </Drawer.Navigator>\n  );\n};\n\nconst Navigation = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const [isReady, setIsReady] = useState(false);\n\n  const ws = useRef(new WebSocket(WEBSOCKET_ENDPOINT)).current;\n\n  const isLoggedIn = useSelector((state: RootState) =>\n    isAuthenticated(state.auth)\n  );\n  const username = useSelector((state: RootState) => state.auth.username);\n\n  useLayoutEffect(() => {\n    const setup = async () => {\n      const savedAuthData = await getAuthDataFromSecureAsync();\n      // check if data from local storage is present\n      if (savedAuthData && savedAuthData?.refreshToken) {\n        console.log(\"saved data is present\");\n        // check if is still valid\n        if (isAuthenticated(savedAuthData)) {\n          // store it in state\n          console.log(\"saved data is still valid\");\n          await dispatch(setAuthState(savedAuthData));\n          // else use refresh token\n        } else {\n          console.log(\"saved data is not valid, using refresh token\");\n          await dispatch(refreshToken(savedAuthData));\n        }\n      }\n      // store response data in state\n      // hide splash screen\n\n      setIsReady(true);\n      hideAsync();\n    };\n\n    setup();\n  }, []);\n\n  useEffect(() => {\n    ws.onopen = () => {\n      // connection opened\n      console.log(\"connected\");\n      ws.send(\n        '{\"command\":\"subscribe\",\"identifier\": \"{\\\\\"channel\\\\\":\\\\\"AirConditionerChannel\\\\\"}\"}'\n      );\n    };\n\n    ws.onmessage = (e) => {\n      // a message was received\n      const data = JSON.parse(e.data);\n      console.log(data);\n      if (\n        data.message?.state &&\n        data.message.user.toLowerCase() !== username.toLowerCase()\n      ) {\n        console.log(\"passed if check\");\n        dispatch(setAcState(data.message.state));\n      }\n    };\n\n    ws.onerror = (e) => {\n      // an error occurred\n      // console.log(e);\n    };\n\n    ws.onclose = (e) => {\n      // connection closed\n      // console.log(e.code, e.reason);\n    };\n  }, []);\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <NavigationContainer>\n      {isLoggedIn ? <AuthenticatedDrawer /> : <AuthStack />}\n    </NavigationContainer>\n  );\n};\nexport default Navigation;\n","import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet } from \"react-native\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { Provider } from \"react-redux\";\nimport { preventAutoHideAsync } from \"expo-splash-screen\";\nimport { Colors } from \"./constants/styles\";\nimport { store } from \"./store\";\nimport Navigation from \"./navigation/Navigation\";\n\n// Prevent splash screen from \npreventAutoHideAsync();\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      {/* <SafeAreaView style={styles.container}> */}\n      <StatusBar style=\"light\" />\n      <Provider store={store}>\n        <Navigation />\n      </Provider>\n      {/* </SafeAreaView> */}\n    </SafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.primary,\n    color: Colors.neutral,\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/air-conditioner-colored.f53f3bbe.png\";","module.exports = __webpack_public_path__ + \"static/media/off.a5b38215.png\";","module.exports = __webpack_public_path__ + \"static/media/on.c7cf9c21.png\";","module.exports = __webpack_public_path__ + \"static/media/cold.28e49a1b.png\";","module.exports = __webpack_public_path__ + \"static/media/hot.a3bc03ae.png\";"],"sourceRoot":""}